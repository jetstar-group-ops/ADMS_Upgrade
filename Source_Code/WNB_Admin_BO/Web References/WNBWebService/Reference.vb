'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.9174
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.9174.
'
Namespace WNBWebService
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="WNB_Admin_WSSoap", [Namespace]:="http://tempuri.org/")>  _
    Partial Public Class WNB_Admin_WS
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private CreateUpdateUnderFloorOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Create_Update_ServiceDefinitionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Get_ChoiceListByChoicelistIDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Get_ServiceDefinitionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Create_Update_ServiceDataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Get_ServiceDataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Get_GalleyWeightOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Get_ULDConfigurationOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Get_IPADUDIDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Get_IPADDBVersionHistoryOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Get_IPADDetailsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Get_IPADVersionNoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Update_IPADDetailsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Push_Pre_Production_Data_To_ProductionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DatabaseSanityChecksOperationCompleted As System.Threading.SendOrPostCallback
        
        Private APNPushRequestOperationCompleted As System.Threading.SendOrPostCallback
        
        Private APNTableSchemaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateAPNRequestMasterOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Publish_DatabaseOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetFunctionalitiesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetReportsForFunctionalityOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUserDetailsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ChangePwdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private IsUserHasPermissionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUsersOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetRolesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetStationsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUserProfileOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateUpdateUserProfileOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetPagesFunctionalitiesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetRoleFunctionalitiesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetRoleFunctionalityLocationsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private IsRoleNameExistsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateRoleOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateRoleOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteRoleOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteUserOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDBDetailsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDBTableDataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteAircraftOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateAircraftOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Is_Database_Upgrade_RunningOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Start_Database_Upgrade_SessionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Cancel_Database_Upgrade_SessionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Get_AircraftsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateAircraftOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateAircraftConfigOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Get_Aircraft_ConfigOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Get_RegistrationOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateRegistrationOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateRegistrationOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteRegistrationOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateSubfleetOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateSubfleetOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Get_SubfleetOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteSubfleetOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Get_GalleyArmsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Create_Update_GalleyArmsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Get_ZoneDefinitionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Create_Update_ZoneDefinationOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Get_Aircraft_Config_AdjustmentsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Create_Update_AirCraftConfigAdjOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateChoice_ListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteChoice_ListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateChoice_ListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Get_ChoiceListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateChoicesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateChoicesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Get_ChoicesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteChoicesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Get_ULDDefinitonOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Create_Update_ULDDefinitionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Create_Update_OprLimitOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Get_OperationalLimitOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Get_ULDPositionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateUpdateAirCraftPostionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Get_UnderFloor_CompOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateUpdateUnderFloorCompOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAircraftConfigDetailsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetULDConfigDefaultDetailsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Get_UnderFloorOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            '   Me.Url = Global.WNB_Admin_BO.My.MySettings.Default.WNB_Admin_BO_WNBWebService_WNB_Admin_WS
            Me.Url = System.Configuration.ConfigurationManager.AppSettings("WNBWebServiceUrl")
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event CreateUpdateUnderFloorCompleted As CreateUpdateUnderFloorCompletedEventHandler
        
        '''<remarks/>
        Public Event Create_Update_ServiceDefinitionCompleted As Create_Update_ServiceDefinitionCompletedEventHandler
        
        '''<remarks/>
        Public Event Get_ChoiceListByChoicelistIDCompleted As Get_ChoiceListByChoicelistIDCompletedEventHandler
        
        '''<remarks/>
        Public Event Get_ServiceDefinitionCompleted As Get_ServiceDefinitionCompletedEventHandler
        
        '''<remarks/>
        Public Event Create_Update_ServiceDataCompleted As Create_Update_ServiceDataCompletedEventHandler
        
        '''<remarks/>
        Public Event Get_ServiceDataCompleted As Get_ServiceDataCompletedEventHandler
        
        '''<remarks/>
        Public Event Get_GalleyWeightCompleted As Get_GalleyWeightCompletedEventHandler
        
        '''<remarks/>
        Public Event Get_ULDConfigurationCompleted As Get_ULDConfigurationCompletedEventHandler
        
        '''<remarks/>
        Public Event Get_IPADUDIDCompleted As Get_IPADUDIDCompletedEventHandler
        
        '''<remarks/>
        Public Event Get_IPADDBVersionHistoryCompleted As Get_IPADDBVersionHistoryCompletedEventHandler
        
        '''<remarks/>
        Public Event Get_IPADDetailsCompleted As Get_IPADDetailsCompletedEventHandler
        
        '''<remarks/>
        Public Event Get_IPADVersionNoCompleted As Get_IPADVersionNoCompletedEventHandler
        
        '''<remarks/>
        Public Event Update_IPADDetailsCompleted As Update_IPADDetailsCompletedEventHandler
        
        '''<remarks/>
        Public Event Push_Pre_Production_Data_To_ProductionCompleted As Push_Pre_Production_Data_To_ProductionCompletedEventHandler
        
        '''<remarks/>
        Public Event DatabaseSanityChecksCompleted As DatabaseSanityChecksCompletedEventHandler
        
        '''<remarks/>
        Public Event APNPushRequestCompleted As APNPushRequestCompletedEventHandler
        
        '''<remarks/>
        Public Event APNTableSchemaCompleted As APNTableSchemaCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateAPNRequestMasterCompleted As CreateAPNRequestMasterCompletedEventHandler
        
        '''<remarks/>
        Public Event Publish_DatabaseCompleted As Publish_DatabaseCompletedEventHandler
        
        '''<remarks/>
        Public Event GetFunctionalitiesCompleted As GetFunctionalitiesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetReportsForFunctionalityCompleted As GetReportsForFunctionalityCompletedEventHandler
        
        '''<remarks/>
        Public Event GetUserDetailsCompleted As GetUserDetailsCompletedEventHandler
        
        '''<remarks/>
        Public Event ChangePwdCompleted As ChangePwdCompletedEventHandler
        
        '''<remarks/>
        Public Event IsUserHasPermissionCompleted As IsUserHasPermissionCompletedEventHandler
        
        '''<remarks/>
        Public Event GetUsersCompleted As GetUsersCompletedEventHandler
        
        '''<remarks/>
        Public Event GetRolesCompleted As GetRolesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetStationsCompleted As GetStationsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetUserProfileCompleted As GetUserProfileCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateUpdateUserProfileCompleted As CreateUpdateUserProfileCompletedEventHandler
        
        '''<remarks/>
        Public Event GetPagesFunctionalitiesCompleted As GetPagesFunctionalitiesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetRoleFunctionalitiesCompleted As GetRoleFunctionalitiesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetRoleFunctionalityLocationsCompleted As GetRoleFunctionalityLocationsCompletedEventHandler
        
        '''<remarks/>
        Public Event IsRoleNameExistsCompleted As IsRoleNameExistsCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateRoleCompleted As CreateRoleCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateRoleCompleted As UpdateRoleCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteRoleCompleted As DeleteRoleCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteUserCompleted As DeleteUserCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDBDetailsCompleted As GetDBDetailsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDBTableDataCompleted As GetDBTableDataCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteAircraftCompleted As DeleteAircraftCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateAircraftCompleted As CreateAircraftCompletedEventHandler
        
        '''<remarks/>
        Public Event Is_Database_Upgrade_RunningCompleted As Is_Database_Upgrade_RunningCompletedEventHandler
        
        '''<remarks/>
        Public Event Start_Database_Upgrade_SessionCompleted As Start_Database_Upgrade_SessionCompletedEventHandler
        
        '''<remarks/>
        Public Event Cancel_Database_Upgrade_SessionCompleted As Cancel_Database_Upgrade_SessionCompletedEventHandler
        
        '''<remarks/>
        Public Event Get_AircraftsCompleted As Get_AircraftsCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateAircraftCompleted As UpdateAircraftCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateAircraftConfigCompleted As UpdateAircraftConfigCompletedEventHandler
        
        '''<remarks/>
        Public Event Get_Aircraft_ConfigCompleted As Get_Aircraft_ConfigCompletedEventHandler
        
        '''<remarks/>
        Public Event Get_RegistrationCompleted As Get_RegistrationCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateRegistrationCompleted As CreateRegistrationCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateRegistrationCompleted As UpdateRegistrationCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteRegistrationCompleted As DeleteRegistrationCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateSubfleetCompleted As CreateSubfleetCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateSubfleetCompleted As UpdateSubfleetCompletedEventHandler
        
        '''<remarks/>
        Public Event Get_SubfleetCompleted As Get_SubfleetCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteSubfleetCompleted As DeleteSubfleetCompletedEventHandler
        
        '''<remarks/>
        Public Event Get_GalleyArmsCompleted As Get_GalleyArmsCompletedEventHandler
        
        '''<remarks/>
        Public Event Create_Update_GalleyArmsCompleted As Create_Update_GalleyArmsCompletedEventHandler
        
        '''<remarks/>
        Public Event Get_ZoneDefinitionCompleted As Get_ZoneDefinitionCompletedEventHandler
        
        '''<remarks/>
        Public Event Create_Update_ZoneDefinationCompleted As Create_Update_ZoneDefinationCompletedEventHandler
        
        '''<remarks/>
        Public Event Get_Aircraft_Config_AdjustmentsCompleted As Get_Aircraft_Config_AdjustmentsCompletedEventHandler
        
        '''<remarks/>
        Public Event Create_Update_AirCraftConfigAdjCompleted As Create_Update_AirCraftConfigAdjCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateChoice_ListCompleted As CreateChoice_ListCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteChoice_ListCompleted As DeleteChoice_ListCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateChoice_ListCompleted As UpdateChoice_ListCompletedEventHandler
        
        '''<remarks/>
        Public Event Get_ChoiceListCompleted As Get_ChoiceListCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateChoicesCompleted As CreateChoicesCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateChoicesCompleted As UpdateChoicesCompletedEventHandler
        
        '''<remarks/>
        Public Event Get_ChoicesCompleted As Get_ChoicesCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteChoicesCompleted As DeleteChoicesCompletedEventHandler
        
        '''<remarks/>
        Public Event Get_ULDDefinitonCompleted As Get_ULDDefinitonCompletedEventHandler
        
        '''<remarks/>
        Public Event Create_Update_ULDDefinitionCompleted As Create_Update_ULDDefinitionCompletedEventHandler
        
        '''<remarks/>
        Public Event Create_Update_OprLimitCompleted As Create_Update_OprLimitCompletedEventHandler
        
        '''<remarks/>
        Public Event Get_OperationalLimitCompleted As Get_OperationalLimitCompletedEventHandler
        
        '''<remarks/>
        Public Event Get_ULDPositionCompleted As Get_ULDPositionCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateUpdateAirCraftPostionCompleted As CreateUpdateAirCraftPostionCompletedEventHandler
        
        '''<remarks/>
        Public Event Get_UnderFloor_CompCompleted As Get_UnderFloor_CompCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateUpdateUnderFloorCompCompleted As CreateUpdateUnderFloorCompCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAircraftConfigDetailsCompleted As GetAircraftConfigDetailsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetULDConfigDefaultDetailsCompleted As GetULDConfigDefaultDetailsCompletedEventHandler
        
        '''<remarks/>
        Public Event Get_UnderFloorCompleted As Get_UnderFloorCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateUpdateUnderFloor", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateUpdateUnderFloor(ByVal underfloor_hold_id As Integer, ByVal hold_cl_id As String, ByVal Max_hold_Load As Integer, ByVal underfloor_comp_id1 As String, ByVal underfloor_comp_id2 As String, ByVal strAircraftId As String, ByVal Version As Integer, ByVal LastUpdatedBy As String) As Integer
            Dim results() As Object = Me.Invoke("CreateUpdateUnderFloor", New Object() {underfloor_hold_id, hold_cl_id, Max_hold_Load, underfloor_comp_id1, underfloor_comp_id2, strAircraftId, Version, LastUpdatedBy})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateUpdateUnderFloorAsync(ByVal underfloor_hold_id As Integer, ByVal hold_cl_id As String, ByVal Max_hold_Load As Integer, ByVal underfloor_comp_id1 As String, ByVal underfloor_comp_id2 As String, ByVal strAircraftId As String, ByVal Version As Integer, ByVal LastUpdatedBy As String)
            Me.CreateUpdateUnderFloorAsync(underfloor_hold_id, hold_cl_id, Max_hold_Load, underfloor_comp_id1, underfloor_comp_id2, strAircraftId, Version, LastUpdatedBy, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateUpdateUnderFloorAsync(ByVal underfloor_hold_id As Integer, ByVal hold_cl_id As String, ByVal Max_hold_Load As Integer, ByVal underfloor_comp_id1 As String, ByVal underfloor_comp_id2 As String, ByVal strAircraftId As String, ByVal Version As Integer, ByVal LastUpdatedBy As String, ByVal userState As Object)
            If (Me.CreateUpdateUnderFloorOperationCompleted Is Nothing) Then
                Me.CreateUpdateUnderFloorOperationCompleted = AddressOf Me.OnCreateUpdateUnderFloorOperationCompleted
            End If
            Me.InvokeAsync("CreateUpdateUnderFloor", New Object() {underfloor_hold_id, hold_cl_id, Max_hold_Load, underfloor_comp_id1, underfloor_comp_id2, strAircraftId, Version, LastUpdatedBy}, Me.CreateUpdateUnderFloorOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateUpdateUnderFloorOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateUpdateUnderFloorCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateUpdateUnderFloorCompleted(Me, New CreateUpdateUnderFloorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Create_Update_ServiceDefinition", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Create_Update_ServiceDefinition(ByVal service_definition_id As Integer, ByVal service_defintion_cl_id As String, ByVal flight_no_desig_ref As String, ByVal start_flight_number As Integer, ByVal end_flight_number As Integer, ByVal intVersionNo As Integer) As Integer
            Dim results() As Object = Me.Invoke("Create_Update_ServiceDefinition", New Object() {service_definition_id, service_defintion_cl_id, flight_no_desig_ref, start_flight_number, end_flight_number, intVersionNo})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Create_Update_ServiceDefinitionAsync(ByVal service_definition_id As Integer, ByVal service_defintion_cl_id As String, ByVal flight_no_desig_ref As String, ByVal start_flight_number As Integer, ByVal end_flight_number As Integer, ByVal intVersionNo As Integer)
            Me.Create_Update_ServiceDefinitionAsync(service_definition_id, service_defintion_cl_id, flight_no_desig_ref, start_flight_number, end_flight_number, intVersionNo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Create_Update_ServiceDefinitionAsync(ByVal service_definition_id As Integer, ByVal service_defintion_cl_id As String, ByVal flight_no_desig_ref As String, ByVal start_flight_number As Integer, ByVal end_flight_number As Integer, ByVal intVersionNo As Integer, ByVal userState As Object)
            If (Me.Create_Update_ServiceDefinitionOperationCompleted Is Nothing) Then
                Me.Create_Update_ServiceDefinitionOperationCompleted = AddressOf Me.OnCreate_Update_ServiceDefinitionOperationCompleted
            End If
            Me.InvokeAsync("Create_Update_ServiceDefinition", New Object() {service_definition_id, service_defintion_cl_id, flight_no_desig_ref, start_flight_number, end_flight_number, intVersionNo}, Me.Create_Update_ServiceDefinitionOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreate_Update_ServiceDefinitionOperationCompleted(ByVal arg As Object)
            If (Not (Me.Create_Update_ServiceDefinitionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Create_Update_ServiceDefinitionCompleted(Me, New Create_Update_ServiceDefinitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_ChoiceListByChoicelistID", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Get_ChoiceListByChoicelistID(ByVal straircraftId As String, ByVal strchoice_list_id As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("Get_ChoiceListByChoicelistID", New Object() {straircraftId, strchoice_list_id})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Get_ChoiceListByChoicelistIDAsync(ByVal straircraftId As String, ByVal strchoice_list_id As String)
            Me.Get_ChoiceListByChoicelistIDAsync(straircraftId, strchoice_list_id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Get_ChoiceListByChoicelistIDAsync(ByVal straircraftId As String, ByVal strchoice_list_id As String, ByVal userState As Object)
            If (Me.Get_ChoiceListByChoicelistIDOperationCompleted Is Nothing) Then
                Me.Get_ChoiceListByChoicelistIDOperationCompleted = AddressOf Me.OnGet_ChoiceListByChoicelistIDOperationCompleted
            End If
            Me.InvokeAsync("Get_ChoiceListByChoicelistID", New Object() {straircraftId, strchoice_list_id}, Me.Get_ChoiceListByChoicelistIDOperationCompleted, userState)
        End Sub
        
        Private Sub OnGet_ChoiceListByChoicelistIDOperationCompleted(ByVal arg As Object)
            If (Not (Me.Get_ChoiceListByChoicelistIDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Get_ChoiceListByChoicelistIDCompleted(Me, New Get_ChoiceListByChoicelistIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_ServiceDefinition", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Get_ServiceDefinition(ByVal service_definition_id As String, ByVal service_definition_cl_id As String, ByVal flight_no_desig_ref As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("Get_ServiceDefinition", New Object() {service_definition_id, service_definition_cl_id, flight_no_desig_ref})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Get_ServiceDefinitionAsync(ByVal service_definition_id As String, ByVal service_definition_cl_id As String, ByVal flight_no_desig_ref As String)
            Me.Get_ServiceDefinitionAsync(service_definition_id, service_definition_cl_id, flight_no_desig_ref, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Get_ServiceDefinitionAsync(ByVal service_definition_id As String, ByVal service_definition_cl_id As String, ByVal flight_no_desig_ref As String, ByVal userState As Object)
            If (Me.Get_ServiceDefinitionOperationCompleted Is Nothing) Then
                Me.Get_ServiceDefinitionOperationCompleted = AddressOf Me.OnGet_ServiceDefinitionOperationCompleted
            End If
            Me.InvokeAsync("Get_ServiceDefinition", New Object() {service_definition_id, service_definition_cl_id, flight_no_desig_ref}, Me.Get_ServiceDefinitionOperationCompleted, userState)
        End Sub
        
        Private Sub OnGet_ServiceDefinitionOperationCompleted(ByVal arg As Object)
            If (Not (Me.Get_ServiceDefinitionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Get_ServiceDefinitionCompleted(Me, New Get_ServiceDefinitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Create_Update_ServiceData", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Create_Update_ServiceData(ByVal servicedata_id As Integer, ByVal type_choicelistid As String, ByVal weight As Integer, ByVal occupies_seat As String, ByVal category_choicelistid As String, ByVal aircraft_id As String, ByVal intVersionNo As Integer) As Integer
            Dim results() As Object = Me.Invoke("Create_Update_ServiceData", New Object() {servicedata_id, type_choicelistid, weight, occupies_seat, category_choicelistid, aircraft_id, intVersionNo})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Create_Update_ServiceDataAsync(ByVal servicedata_id As Integer, ByVal type_choicelistid As String, ByVal weight As Integer, ByVal occupies_seat As String, ByVal category_choicelistid As String, ByVal aircraft_id As String, ByVal intVersionNo As Integer)
            Me.Create_Update_ServiceDataAsync(servicedata_id, type_choicelistid, weight, occupies_seat, category_choicelistid, aircraft_id, intVersionNo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Create_Update_ServiceDataAsync(ByVal servicedata_id As Integer, ByVal type_choicelistid As String, ByVal weight As Integer, ByVal occupies_seat As String, ByVal category_choicelistid As String, ByVal aircraft_id As String, ByVal intVersionNo As Integer, ByVal userState As Object)
            If (Me.Create_Update_ServiceDataOperationCompleted Is Nothing) Then
                Me.Create_Update_ServiceDataOperationCompleted = AddressOf Me.OnCreate_Update_ServiceDataOperationCompleted
            End If
            Me.InvokeAsync("Create_Update_ServiceData", New Object() {servicedata_id, type_choicelistid, weight, occupies_seat, category_choicelistid, aircraft_id, intVersionNo}, Me.Create_Update_ServiceDataOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreate_Update_ServiceDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.Create_Update_ServiceDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Create_Update_ServiceDataCompleted(Me, New Create_Update_ServiceDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_ServiceData", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Get_ServiceData(ByVal servicedata_id As String, ByVal type_choicelistid As String, ByVal aircraftid As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("Get_ServiceData", New Object() {servicedata_id, type_choicelistid, aircraftid})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Get_ServiceDataAsync(ByVal servicedata_id As String, ByVal type_choicelistid As String, ByVal aircraftid As String)
            Me.Get_ServiceDataAsync(servicedata_id, type_choicelistid, aircraftid, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Get_ServiceDataAsync(ByVal servicedata_id As String, ByVal type_choicelistid As String, ByVal aircraftid As String, ByVal userState As Object)
            If (Me.Get_ServiceDataOperationCompleted Is Nothing) Then
                Me.Get_ServiceDataOperationCompleted = AddressOf Me.OnGet_ServiceDataOperationCompleted
            End If
            Me.InvokeAsync("Get_ServiceData", New Object() {servicedata_id, type_choicelistid, aircraftid}, Me.Get_ServiceDataOperationCompleted, userState)
        End Sub
        
        Private Sub OnGet_ServiceDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.Get_ServiceDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Get_ServiceDataCompleted(Me, New Get_ServiceDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_GalleyWeight", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Get_GalleyWeight(ByVal subfleet_id As String, ByVal desig_cl_id As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("Get_GalleyWeight", New Object() {subfleet_id, desig_cl_id})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Get_GalleyWeightAsync(ByVal subfleet_id As String, ByVal desig_cl_id As String)
            Me.Get_GalleyWeightAsync(subfleet_id, desig_cl_id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Get_GalleyWeightAsync(ByVal subfleet_id As String, ByVal desig_cl_id As String, ByVal userState As Object)
            If (Me.Get_GalleyWeightOperationCompleted Is Nothing) Then
                Me.Get_GalleyWeightOperationCompleted = AddressOf Me.OnGet_GalleyWeightOperationCompleted
            End If
            Me.InvokeAsync("Get_GalleyWeight", New Object() {subfleet_id, desig_cl_id}, Me.Get_GalleyWeightOperationCompleted, userState)
        End Sub
        
        Private Sub OnGet_GalleyWeightOperationCompleted(ByVal arg As Object)
            If (Not (Me.Get_GalleyWeightCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Get_GalleyWeightCompleted(Me, New Get_GalleyWeightCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_ULDConfiguration", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Get_ULDConfiguration(ByVal strTableId As String, ByVal strAircraftId As String, ByVal ConfigID As Integer, ByVal AirConfigID As String, ByVal ULDConfigID As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("Get_ULDConfiguration", New Object() {strTableId, strAircraftId, ConfigID, AirConfigID, ULDConfigID})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Get_ULDConfigurationAsync(ByVal strTableId As String, ByVal strAircraftId As String, ByVal ConfigID As Integer, ByVal AirConfigID As String, ByVal ULDConfigID As String)
            Me.Get_ULDConfigurationAsync(strTableId, strAircraftId, ConfigID, AirConfigID, ULDConfigID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Get_ULDConfigurationAsync(ByVal strTableId As String, ByVal strAircraftId As String, ByVal ConfigID As Integer, ByVal AirConfigID As String, ByVal ULDConfigID As String, ByVal userState As Object)
            If (Me.Get_ULDConfigurationOperationCompleted Is Nothing) Then
                Me.Get_ULDConfigurationOperationCompleted = AddressOf Me.OnGet_ULDConfigurationOperationCompleted
            End If
            Me.InvokeAsync("Get_ULDConfiguration", New Object() {strTableId, strAircraftId, ConfigID, AirConfigID, ULDConfigID}, Me.Get_ULDConfigurationOperationCompleted, userState)
        End Sub
        
        Private Sub OnGet_ULDConfigurationOperationCompleted(ByVal arg As Object)
            If (Not (Me.Get_ULDConfigurationCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Get_ULDConfigurationCompleted(Me, New Get_ULDConfigurationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_IPADUDID", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Get_IPADUDID() As System.Data.DataTable
            Dim results() As Object = Me.Invoke("Get_IPADUDID", New Object(-1) {})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Get_IPADUDIDAsync()
            Me.Get_IPADUDIDAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Get_IPADUDIDAsync(ByVal userState As Object)
            If (Me.Get_IPADUDIDOperationCompleted Is Nothing) Then
                Me.Get_IPADUDIDOperationCompleted = AddressOf Me.OnGet_IPADUDIDOperationCompleted
            End If
            Me.InvokeAsync("Get_IPADUDID", New Object(-1) {}, Me.Get_IPADUDIDOperationCompleted, userState)
        End Sub
        
        Private Sub OnGet_IPADUDIDOperationCompleted(ByVal arg As Object)
            If (Not (Me.Get_IPADUDIDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Get_IPADUDIDCompleted(Me, New Get_IPADUDIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_IPADDBVersionHistory", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Get_IPADDBVersionHistory(ByVal IpadUD_id As String, ByVal IsExcludeLIPad As Integer, ByVal strDBVerNo As String, ByVal strExcludeDBVerNo As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Get_IPADDBVersionHistory", New Object() {IpadUD_id, IsExcludeLIPad, strDBVerNo, strExcludeDBVerNo})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Get_IPADDBVersionHistoryAsync(ByVal IpadUD_id As String, ByVal IsExcludeLIPad As Integer, ByVal strDBVerNo As String, ByVal strExcludeDBVerNo As String)
            Me.Get_IPADDBVersionHistoryAsync(IpadUD_id, IsExcludeLIPad, strDBVerNo, strExcludeDBVerNo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Get_IPADDBVersionHistoryAsync(ByVal IpadUD_id As String, ByVal IsExcludeLIPad As Integer, ByVal strDBVerNo As String, ByVal strExcludeDBVerNo As String, ByVal userState As Object)
            If (Me.Get_IPADDBVersionHistoryOperationCompleted Is Nothing) Then
                Me.Get_IPADDBVersionHistoryOperationCompleted = AddressOf Me.OnGet_IPADDBVersionHistoryOperationCompleted
            End If
            Me.InvokeAsync("Get_IPADDBVersionHistory", New Object() {IpadUD_id, IsExcludeLIPad, strDBVerNo, strExcludeDBVerNo}, Me.Get_IPADDBVersionHistoryOperationCompleted, userState)
        End Sub
        
        Private Sub OnGet_IPADDBVersionHistoryOperationCompleted(ByVal arg As Object)
            If (Not (Me.Get_IPADDBVersionHistoryCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Get_IPADDBVersionHistoryCompleted(Me, New Get_IPADDBVersionHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_IPADDetails", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Get_IPADDetails(ByVal IpadUD_id As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Get_IPADDetails", New Object() {IpadUD_id})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Get_IPADDetailsAsync(ByVal IpadUD_id As String)
            Me.Get_IPADDetailsAsync(IpadUD_id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Get_IPADDetailsAsync(ByVal IpadUD_id As String, ByVal userState As Object)
            If (Me.Get_IPADDetailsOperationCompleted Is Nothing) Then
                Me.Get_IPADDetailsOperationCompleted = AddressOf Me.OnGet_IPADDetailsOperationCompleted
            End If
            Me.InvokeAsync("Get_IPADDetails", New Object() {IpadUD_id}, Me.Get_IPADDetailsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGet_IPADDetailsOperationCompleted(ByVal arg As Object)
            If (Not (Me.Get_IPADDetailsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Get_IPADDetailsCompleted(Me, New Get_IPADDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_IPADVersionNo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Get_IPADVersionNo() As System.Data.DataTable
            Dim results() As Object = Me.Invoke("Get_IPADVersionNo", New Object(-1) {})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Get_IPADVersionNoAsync()
            Me.Get_IPADVersionNoAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Get_IPADVersionNoAsync(ByVal userState As Object)
            If (Me.Get_IPADVersionNoOperationCompleted Is Nothing) Then
                Me.Get_IPADVersionNoOperationCompleted = AddressOf Me.OnGet_IPADVersionNoOperationCompleted
            End If
            Me.InvokeAsync("Get_IPADVersionNo", New Object(-1) {}, Me.Get_IPADVersionNoOperationCompleted, userState)
        End Sub
        
        Private Sub OnGet_IPADVersionNoOperationCompleted(ByVal arg As Object)
            If (Not (Me.Get_IPADVersionNoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Get_IPADVersionNoCompleted(Me, New Get_IPADVersionNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Update_IPADDetails", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Update_IPADDetails(ByVal IpadUD_id As String, ByVal EmpNo As String, ByVal IsDisabled As Integer, ByVal intVersionNo As Integer, ByVal strUpdatedBy As String) As Integer
            Dim results() As Object = Me.Invoke("Update_IPADDetails", New Object() {IpadUD_id, EmpNo, IsDisabled, intVersionNo, strUpdatedBy})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Update_IPADDetailsAsync(ByVal IpadUD_id As String, ByVal EmpNo As String, ByVal IsDisabled As Integer, ByVal intVersionNo As Integer, ByVal strUpdatedBy As String)
            Me.Update_IPADDetailsAsync(IpadUD_id, EmpNo, IsDisabled, intVersionNo, strUpdatedBy, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Update_IPADDetailsAsync(ByVal IpadUD_id As String, ByVal EmpNo As String, ByVal IsDisabled As Integer, ByVal intVersionNo As Integer, ByVal strUpdatedBy As String, ByVal userState As Object)
            If (Me.Update_IPADDetailsOperationCompleted Is Nothing) Then
                Me.Update_IPADDetailsOperationCompleted = AddressOf Me.OnUpdate_IPADDetailsOperationCompleted
            End If
            Me.InvokeAsync("Update_IPADDetails", New Object() {IpadUD_id, EmpNo, IsDisabled, intVersionNo, strUpdatedBy}, Me.Update_IPADDetailsOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdate_IPADDetailsOperationCompleted(ByVal arg As Object)
            If (Not (Me.Update_IPADDetailsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Update_IPADDetailsCompleted(Me, New Update_IPADDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Push_Pre_Production_Data_To_Production", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Push_Pre_Production_Data_To_Production(ByVal strCreatedBy As String) As Integer
            Dim results() As Object = Me.Invoke("Push_Pre_Production_Data_To_Production", New Object() {strCreatedBy})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Push_Pre_Production_Data_To_ProductionAsync(ByVal strCreatedBy As String)
            Me.Push_Pre_Production_Data_To_ProductionAsync(strCreatedBy, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Push_Pre_Production_Data_To_ProductionAsync(ByVal strCreatedBy As String, ByVal userState As Object)
            If (Me.Push_Pre_Production_Data_To_ProductionOperationCompleted Is Nothing) Then
                Me.Push_Pre_Production_Data_To_ProductionOperationCompleted = AddressOf Me.OnPush_Pre_Production_Data_To_ProductionOperationCompleted
            End If
            Me.InvokeAsync("Push_Pre_Production_Data_To_Production", New Object() {strCreatedBy}, Me.Push_Pre_Production_Data_To_ProductionOperationCompleted, userState)
        End Sub
        
        Private Sub OnPush_Pre_Production_Data_To_ProductionOperationCompleted(ByVal arg As Object)
            If (Not (Me.Push_Pre_Production_Data_To_ProductionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Push_Pre_Production_Data_To_ProductionCompleted(Me, New Push_Pre_Production_Data_To_ProductionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DatabaseSanityChecks", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DatabaseSanityChecks() As System.Data.DataSet
            Dim results() As Object = Me.Invoke("DatabaseSanityChecks", New Object(-1) {})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DatabaseSanityChecksAsync()
            Me.DatabaseSanityChecksAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DatabaseSanityChecksAsync(ByVal userState As Object)
            If (Me.DatabaseSanityChecksOperationCompleted Is Nothing) Then
                Me.DatabaseSanityChecksOperationCompleted = AddressOf Me.OnDatabaseSanityChecksOperationCompleted
            End If
            Me.InvokeAsync("DatabaseSanityChecks", New Object(-1) {}, Me.DatabaseSanityChecksOperationCompleted, userState)
        End Sub
        
        Private Sub OnDatabaseSanityChecksOperationCompleted(ByVal arg As Object)
            If (Not (Me.DatabaseSanityChecksCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DatabaseSanityChecksCompleted(Me, New DatabaseSanityChecksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/APNPushRequest", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function APNPushRequest() As System.Data.DataSet
            Dim results() As Object = Me.Invoke("APNPushRequest", New Object(-1) {})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub APNPushRequestAsync()
            Me.APNPushRequestAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub APNPushRequestAsync(ByVal userState As Object)
            If (Me.APNPushRequestOperationCompleted Is Nothing) Then
                Me.APNPushRequestOperationCompleted = AddressOf Me.OnAPNPushRequestOperationCompleted
            End If
            Me.InvokeAsync("APNPushRequest", New Object(-1) {}, Me.APNPushRequestOperationCompleted, userState)
        End Sub
        
        Private Sub OnAPNPushRequestOperationCompleted(ByVal arg As Object)
            If (Not (Me.APNPushRequestCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent APNPushRequestCompleted(Me, New APNPushRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/APNTableSchema", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function APNTableSchema() As System.Data.DataSet
            Dim results() As Object = Me.Invoke("APNTableSchema", New Object(-1) {})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub APNTableSchemaAsync()
            Me.APNTableSchemaAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub APNTableSchemaAsync(ByVal userState As Object)
            If (Me.APNTableSchemaOperationCompleted Is Nothing) Then
                Me.APNTableSchemaOperationCompleted = AddressOf Me.OnAPNTableSchemaOperationCompleted
            End If
            Me.InvokeAsync("APNTableSchema", New Object(-1) {}, Me.APNTableSchemaOperationCompleted, userState)
        End Sub
        
        Private Sub OnAPNTableSchemaOperationCompleted(ByVal arg As Object)
            If (Not (Me.APNTableSchemaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent APNTableSchemaCompleted(Me, New APNTableSchemaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateAPNRequestMaster", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateAPNRequestMaster(ByVal intAPNRequestId As Integer, ByVal strAPNMessage As String, ByVal dtmAPNRequestDate As Date, ByVal intBadgeCount As Integer, ByVal strUserID As String, ByVal dtAPNRequestDetail As System.Data.DataTable) As Integer
            Dim results() As Object = Me.Invoke("CreateAPNRequestMaster", New Object() {intAPNRequestId, strAPNMessage, dtmAPNRequestDate, intBadgeCount, strUserID, dtAPNRequestDetail})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateAPNRequestMasterAsync(ByVal intAPNRequestId As Integer, ByVal strAPNMessage As String, ByVal dtmAPNRequestDate As Date, ByVal intBadgeCount As Integer, ByVal strUserID As String, ByVal dtAPNRequestDetail As System.Data.DataTable)
            Me.CreateAPNRequestMasterAsync(intAPNRequestId, strAPNMessage, dtmAPNRequestDate, intBadgeCount, strUserID, dtAPNRequestDetail, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateAPNRequestMasterAsync(ByVal intAPNRequestId As Integer, ByVal strAPNMessage As String, ByVal dtmAPNRequestDate As Date, ByVal intBadgeCount As Integer, ByVal strUserID As String, ByVal dtAPNRequestDetail As System.Data.DataTable, ByVal userState As Object)
            If (Me.CreateAPNRequestMasterOperationCompleted Is Nothing) Then
                Me.CreateAPNRequestMasterOperationCompleted = AddressOf Me.OnCreateAPNRequestMasterOperationCompleted
            End If
            Me.InvokeAsync("CreateAPNRequestMaster", New Object() {intAPNRequestId, strAPNMessage, dtmAPNRequestDate, intBadgeCount, strUserID, dtAPNRequestDetail}, Me.CreateAPNRequestMasterOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateAPNRequestMasterOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateAPNRequestMasterCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateAPNRequestMasterCompleted(Me, New CreateAPNRequestMasterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Publish_Database", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Publish_Database(ByVal strDbVersion As String, ByVal strPublishedBy As String)
            Me.Invoke("Publish_Database", New Object() {strDbVersion, strPublishedBy})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Publish_DatabaseAsync(ByVal strDbVersion As String, ByVal strPublishedBy As String)
            Me.Publish_DatabaseAsync(strDbVersion, strPublishedBy, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Publish_DatabaseAsync(ByVal strDbVersion As String, ByVal strPublishedBy As String, ByVal userState As Object)
            If (Me.Publish_DatabaseOperationCompleted Is Nothing) Then
                Me.Publish_DatabaseOperationCompleted = AddressOf Me.OnPublish_DatabaseOperationCompleted
            End If
            Me.InvokeAsync("Publish_Database", New Object() {strDbVersion, strPublishedBy}, Me.Publish_DatabaseOperationCompleted, userState)
        End Sub
        
        Private Sub OnPublish_DatabaseOperationCompleted(ByVal arg As Object)
            If (Not (Me.Publish_DatabaseCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Publish_DatabaseCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFunctionalities", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetFunctionalities(ByVal ParentFunctionalityId As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetFunctionalities", New Object() {ParentFunctionalityId})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetFunctionalitiesAsync(ByVal ParentFunctionalityId As String)
            Me.GetFunctionalitiesAsync(ParentFunctionalityId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetFunctionalitiesAsync(ByVal ParentFunctionalityId As String, ByVal userState As Object)
            If (Me.GetFunctionalitiesOperationCompleted Is Nothing) Then
                Me.GetFunctionalitiesOperationCompleted = AddressOf Me.OnGetFunctionalitiesOperationCompleted
            End If
            Me.InvokeAsync("GetFunctionalities", New Object() {ParentFunctionalityId}, Me.GetFunctionalitiesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetFunctionalitiesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetFunctionalitiesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetFunctionalitiesCompleted(Me, New GetFunctionalitiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetReportsForFunctionality", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetReportsForFunctionality(ByVal FunctionalityId As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetReportsForFunctionality", New Object() {FunctionalityId})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetReportsForFunctionalityAsync(ByVal FunctionalityId As String)
            Me.GetReportsForFunctionalityAsync(FunctionalityId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetReportsForFunctionalityAsync(ByVal FunctionalityId As String, ByVal userState As Object)
            If (Me.GetReportsForFunctionalityOperationCompleted Is Nothing) Then
                Me.GetReportsForFunctionalityOperationCompleted = AddressOf Me.OnGetReportsForFunctionalityOperationCompleted
            End If
            Me.InvokeAsync("GetReportsForFunctionality", New Object() {FunctionalityId}, Me.GetReportsForFunctionalityOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetReportsForFunctionalityOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetReportsForFunctionalityCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetReportsForFunctionalityCompleted(Me, New GetReportsForFunctionalityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserDetails", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUserDetails(ByVal ps_UserId As String, ByVal ps_Password As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetUserDetails", New Object() {ps_UserId, ps_Password})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUserDetailsAsync(ByVal ps_UserId As String, ByVal ps_Password As String)
            Me.GetUserDetailsAsync(ps_UserId, ps_Password, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUserDetailsAsync(ByVal ps_UserId As String, ByVal ps_Password As String, ByVal userState As Object)
            If (Me.GetUserDetailsOperationCompleted Is Nothing) Then
                Me.GetUserDetailsOperationCompleted = AddressOf Me.OnGetUserDetailsOperationCompleted
            End If
            Me.InvokeAsync("GetUserDetails", New Object() {ps_UserId, ps_Password}, Me.GetUserDetailsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUserDetailsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUserDetailsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUserDetailsCompleted(Me, New GetUserDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ChangePwd", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ChangePwd(ByVal ps_UserId As String, ByVal ps_NewPassword As String) As Integer
            Dim results() As Object = Me.Invoke("ChangePwd", New Object() {ps_UserId, ps_NewPassword})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ChangePwdAsync(ByVal ps_UserId As String, ByVal ps_NewPassword As String)
            Me.ChangePwdAsync(ps_UserId, ps_NewPassword, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ChangePwdAsync(ByVal ps_UserId As String, ByVal ps_NewPassword As String, ByVal userState As Object)
            If (Me.ChangePwdOperationCompleted Is Nothing) Then
                Me.ChangePwdOperationCompleted = AddressOf Me.OnChangePwdOperationCompleted
            End If
            Me.InvokeAsync("ChangePwd", New Object() {ps_UserId, ps_NewPassword}, Me.ChangePwdOperationCompleted, userState)
        End Sub
        
        Private Sub OnChangePwdOperationCompleted(ByVal arg As Object)
            If (Not (Me.ChangePwdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ChangePwdCompleted(Me, New ChangePwdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsUserHasPermission", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function IsUserHasPermission(ByVal UserId As String, ByVal FunctionalityId As Integer, ByVal LocationId As String, ByVal ParentFunctionality As Integer) As Boolean
            Dim results() As Object = Me.Invoke("IsUserHasPermission", New Object() {UserId, FunctionalityId, LocationId, ParentFunctionality})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub IsUserHasPermissionAsync(ByVal UserId As String, ByVal FunctionalityId As Integer, ByVal LocationId As String, ByVal ParentFunctionality As Integer)
            Me.IsUserHasPermissionAsync(UserId, FunctionalityId, LocationId, ParentFunctionality, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub IsUserHasPermissionAsync(ByVal UserId As String, ByVal FunctionalityId As Integer, ByVal LocationId As String, ByVal ParentFunctionality As Integer, ByVal userState As Object)
            If (Me.IsUserHasPermissionOperationCompleted Is Nothing) Then
                Me.IsUserHasPermissionOperationCompleted = AddressOf Me.OnIsUserHasPermissionOperationCompleted
            End If
            Me.InvokeAsync("IsUserHasPermission", New Object() {UserId, FunctionalityId, LocationId, ParentFunctionality}, Me.IsUserHasPermissionOperationCompleted, userState)
        End Sub
        
        Private Sub OnIsUserHasPermissionOperationCompleted(ByVal arg As Object)
            If (Not (Me.IsUserHasPermissionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent IsUserHasPermissionCompleted(Me, New IsUserHasPermissionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUsers", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUsers() As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetUsers", New Object(-1) {})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUsersAsync()
            Me.GetUsersAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUsersAsync(ByVal userState As Object)
            If (Me.GetUsersOperationCompleted Is Nothing) Then
                Me.GetUsersOperationCompleted = AddressOf Me.OnGetUsersOperationCompleted
            End If
            Me.InvokeAsync("GetUsers", New Object(-1) {}, Me.GetUsersOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUsersOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUsersCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUsersCompleted(Me, New GetUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRoles", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetRoles() As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetRoles", New Object(-1) {})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetRolesAsync()
            Me.GetRolesAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetRolesAsync(ByVal userState As Object)
            If (Me.GetRolesOperationCompleted Is Nothing) Then
                Me.GetRolesOperationCompleted = AddressOf Me.OnGetRolesOperationCompleted
            End If
            Me.InvokeAsync("GetRoles", New Object(-1) {}, Me.GetRolesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetRolesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetRolesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetRolesCompleted(Me, New GetRolesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStations", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetStations() As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetStations", New Object(-1) {})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetStationsAsync()
            Me.GetStationsAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetStationsAsync(ByVal userState As Object)
            If (Me.GetStationsOperationCompleted Is Nothing) Then
                Me.GetStationsOperationCompleted = AddressOf Me.OnGetStationsOperationCompleted
            End If
            Me.InvokeAsync("GetStations", New Object(-1) {}, Me.GetStationsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetStationsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetStationsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetStationsCompleted(Me, New GetStationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserProfile", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUserProfile(ByVal ps_UserId As String, ByVal UserSNO As Integer) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetUserProfile", New Object() {ps_UserId, UserSNO})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUserProfileAsync(ByVal ps_UserId As String, ByVal UserSNO As Integer)
            Me.GetUserProfileAsync(ps_UserId, UserSNO, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUserProfileAsync(ByVal ps_UserId As String, ByVal UserSNO As Integer, ByVal userState As Object)
            If (Me.GetUserProfileOperationCompleted Is Nothing) Then
                Me.GetUserProfileOperationCompleted = AddressOf Me.OnGetUserProfileOperationCompleted
            End If
            Me.InvokeAsync("GetUserProfile", New Object() {ps_UserId, UserSNO}, Me.GetUserProfileOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUserProfileOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUserProfileCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUserProfileCompleted(Me, New GetUserProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateUpdateUserProfile", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateUpdateUserProfile(ByVal UserId As String, ByVal LocationId As String, ByVal Password As String, ByVal IsDisabled As Integer, ByVal RoleIds As String) As Integer
            Dim results() As Object = Me.Invoke("CreateUpdateUserProfile", New Object() {UserId, LocationId, Password, IsDisabled, RoleIds})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateUpdateUserProfileAsync(ByVal UserId As String, ByVal LocationId As String, ByVal Password As String, ByVal IsDisabled As Integer, ByVal RoleIds As String)
            Me.CreateUpdateUserProfileAsync(UserId, LocationId, Password, IsDisabled, RoleIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateUpdateUserProfileAsync(ByVal UserId As String, ByVal LocationId As String, ByVal Password As String, ByVal IsDisabled As Integer, ByVal RoleIds As String, ByVal userState As Object)
            If (Me.CreateUpdateUserProfileOperationCompleted Is Nothing) Then
                Me.CreateUpdateUserProfileOperationCompleted = AddressOf Me.OnCreateUpdateUserProfileOperationCompleted
            End If
            Me.InvokeAsync("CreateUpdateUserProfile", New Object() {UserId, LocationId, Password, IsDisabled, RoleIds}, Me.CreateUpdateUserProfileOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateUpdateUserProfileOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateUpdateUserProfileCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateUpdateUserProfileCompleted(Me, New CreateUpdateUserProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPagesFunctionalities", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPagesFunctionalities(ByVal ParentFunctionalityId As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetPagesFunctionalities", New Object() {ParentFunctionalityId})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetPagesFunctionalitiesAsync(ByVal ParentFunctionalityId As String)
            Me.GetPagesFunctionalitiesAsync(ParentFunctionalityId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetPagesFunctionalitiesAsync(ByVal ParentFunctionalityId As String, ByVal userState As Object)
            If (Me.GetPagesFunctionalitiesOperationCompleted Is Nothing) Then
                Me.GetPagesFunctionalitiesOperationCompleted = AddressOf Me.OnGetPagesFunctionalitiesOperationCompleted
            End If
            Me.InvokeAsync("GetPagesFunctionalities", New Object() {ParentFunctionalityId}, Me.GetPagesFunctionalitiesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetPagesFunctionalitiesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetPagesFunctionalitiesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetPagesFunctionalitiesCompleted(Me, New GetPagesFunctionalitiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRoleFunctionalities", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetRoleFunctionalities(ByVal RoleId As Integer) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetRoleFunctionalities", New Object() {RoleId})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetRoleFunctionalitiesAsync(ByVal RoleId As Integer)
            Me.GetRoleFunctionalitiesAsync(RoleId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetRoleFunctionalitiesAsync(ByVal RoleId As Integer, ByVal userState As Object)
            If (Me.GetRoleFunctionalitiesOperationCompleted Is Nothing) Then
                Me.GetRoleFunctionalitiesOperationCompleted = AddressOf Me.OnGetRoleFunctionalitiesOperationCompleted
            End If
            Me.InvokeAsync("GetRoleFunctionalities", New Object() {RoleId}, Me.GetRoleFunctionalitiesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetRoleFunctionalitiesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetRoleFunctionalitiesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetRoleFunctionalitiesCompleted(Me, New GetRoleFunctionalitiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRoleFunctionalityLocations", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetRoleFunctionalityLocations(ByVal RoleId As Integer, ByVal FunctionalityId As Integer) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetRoleFunctionalityLocations", New Object() {RoleId, FunctionalityId})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetRoleFunctionalityLocationsAsync(ByVal RoleId As Integer, ByVal FunctionalityId As Integer)
            Me.GetRoleFunctionalityLocationsAsync(RoleId, FunctionalityId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetRoleFunctionalityLocationsAsync(ByVal RoleId As Integer, ByVal FunctionalityId As Integer, ByVal userState As Object)
            If (Me.GetRoleFunctionalityLocationsOperationCompleted Is Nothing) Then
                Me.GetRoleFunctionalityLocationsOperationCompleted = AddressOf Me.OnGetRoleFunctionalityLocationsOperationCompleted
            End If
            Me.InvokeAsync("GetRoleFunctionalityLocations", New Object() {RoleId, FunctionalityId}, Me.GetRoleFunctionalityLocationsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetRoleFunctionalityLocationsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetRoleFunctionalityLocationsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetRoleFunctionalityLocationsCompleted(Me, New GetRoleFunctionalityLocationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsRoleNameExists", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function IsRoleNameExists(ByVal RoleName As String, ByVal RoleId As Integer) As Object
            Dim results() As Object = Me.Invoke("IsRoleNameExists", New Object() {RoleName, RoleId})
            Return CType(results(0),Object)
        End Function
        
        '''<remarks/>
        Public Overloads Sub IsRoleNameExistsAsync(ByVal RoleName As String, ByVal RoleId As Integer)
            Me.IsRoleNameExistsAsync(RoleName, RoleId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub IsRoleNameExistsAsync(ByVal RoleName As String, ByVal RoleId As Integer, ByVal userState As Object)
            If (Me.IsRoleNameExistsOperationCompleted Is Nothing) Then
                Me.IsRoleNameExistsOperationCompleted = AddressOf Me.OnIsRoleNameExistsOperationCompleted
            End If
            Me.InvokeAsync("IsRoleNameExists", New Object() {RoleName, RoleId}, Me.IsRoleNameExistsOperationCompleted, userState)
        End Sub
        
        Private Sub OnIsRoleNameExistsOperationCompleted(ByVal arg As Object)
            If (Not (Me.IsRoleNameExistsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent IsRoleNameExistsCompleted(Me, New IsRoleNameExistsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateRole", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateRole(ByVal RoleName As String, ByVal RoleDescription As String, ByVal RoleFunctionalities As String, ByVal CreatedBy As String) As Integer
            Dim results() As Object = Me.Invoke("CreateRole", New Object() {RoleName, RoleDescription, RoleFunctionalities, CreatedBy})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateRoleAsync(ByVal RoleName As String, ByVal RoleDescription As String, ByVal RoleFunctionalities As String, ByVal CreatedBy As String)
            Me.CreateRoleAsync(RoleName, RoleDescription, RoleFunctionalities, CreatedBy, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateRoleAsync(ByVal RoleName As String, ByVal RoleDescription As String, ByVal RoleFunctionalities As String, ByVal CreatedBy As String, ByVal userState As Object)
            If (Me.CreateRoleOperationCompleted Is Nothing) Then
                Me.CreateRoleOperationCompleted = AddressOf Me.OnCreateRoleOperationCompleted
            End If
            Me.InvokeAsync("CreateRole", New Object() {RoleName, RoleDescription, RoleFunctionalities, CreatedBy}, Me.CreateRoleOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateRoleOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateRoleCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateRoleCompleted(Me, New CreateRoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateRole", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateRole(ByVal RoleId As Integer, ByVal RoleName As String, ByVal RoleDescription As String, ByVal RoleFunctionalities As String, ByVal ModifyBy As String) As Integer
            Dim results() As Object = Me.Invoke("UpdateRole", New Object() {RoleId, RoleName, RoleDescription, RoleFunctionalities, ModifyBy})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateRoleAsync(ByVal RoleId As Integer, ByVal RoleName As String, ByVal RoleDescription As String, ByVal RoleFunctionalities As String, ByVal ModifyBy As String)
            Me.UpdateRoleAsync(RoleId, RoleName, RoleDescription, RoleFunctionalities, ModifyBy, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateRoleAsync(ByVal RoleId As Integer, ByVal RoleName As String, ByVal RoleDescription As String, ByVal RoleFunctionalities As String, ByVal ModifyBy As String, ByVal userState As Object)
            If (Me.UpdateRoleOperationCompleted Is Nothing) Then
                Me.UpdateRoleOperationCompleted = AddressOf Me.OnUpdateRoleOperationCompleted
            End If
            Me.InvokeAsync("UpdateRole", New Object() {RoleId, RoleName, RoleDescription, RoleFunctionalities, ModifyBy}, Me.UpdateRoleOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateRoleOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateRoleCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateRoleCompleted(Me, New UpdateRoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteRole", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DeleteRole(ByVal intRoleId As Integer) As Integer
            Dim results() As Object = Me.Invoke("DeleteRole", New Object() {intRoleId})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DeleteRoleAsync(ByVal intRoleId As Integer)
            Me.DeleteRoleAsync(intRoleId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteRoleAsync(ByVal intRoleId As Integer, ByVal userState As Object)
            If (Me.DeleteRoleOperationCompleted Is Nothing) Then
                Me.DeleteRoleOperationCompleted = AddressOf Me.OnDeleteRoleOperationCompleted
            End If
            Me.InvokeAsync("DeleteRole", New Object() {intRoleId}, Me.DeleteRoleOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteRoleOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteRoleCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteRoleCompleted(Me, New DeleteRoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteUser", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DeleteUser(ByVal intUserSNO As Integer, ByVal strUserId As String) As Integer
            Dim results() As Object = Me.Invoke("DeleteUser", New Object() {intUserSNO, strUserId})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DeleteUserAsync(ByVal intUserSNO As Integer, ByVal strUserId As String)
            Me.DeleteUserAsync(intUserSNO, strUserId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteUserAsync(ByVal intUserSNO As Integer, ByVal strUserId As String, ByVal userState As Object)
            If (Me.DeleteUserOperationCompleted Is Nothing) Then
                Me.DeleteUserOperationCompleted = AddressOf Me.OnDeleteUserOperationCompleted
            End If
            Me.InvokeAsync("DeleteUser", New Object() {intUserSNO, strUserId}, Me.DeleteUserOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteUserOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteUserCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteUserCompleted(Me, New DeleteUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDBDetails", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDBDetails() As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetDBDetails", New Object(-1) {})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDBDetailsAsync()
            Me.GetDBDetailsAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDBDetailsAsync(ByVal userState As Object)
            If (Me.GetDBDetailsOperationCompleted Is Nothing) Then
                Me.GetDBDetailsOperationCompleted = AddressOf Me.OnGetDBDetailsOperationCompleted
            End If
            Me.InvokeAsync("GetDBDetails", New Object(-1) {}, Me.GetDBDetailsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDBDetailsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDBDetailsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDBDetailsCompleted(Me, New GetDBDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDBTableData", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDBTableData(ByVal strTableId As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetDBTableData", New Object() {strTableId})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDBTableDataAsync(ByVal strTableId As String)
            Me.GetDBTableDataAsync(strTableId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDBTableDataAsync(ByVal strTableId As String, ByVal userState As Object)
            If (Me.GetDBTableDataOperationCompleted Is Nothing) Then
                Me.GetDBTableDataOperationCompleted = AddressOf Me.OnGetDBTableDataOperationCompleted
            End If
            Me.InvokeAsync("GetDBTableData", New Object() {strTableId}, Me.GetDBTableDataOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDBTableDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDBTableDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDBTableDataCompleted(Me, New GetDBTableDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteAircraft", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DeleteAircraft(ByVal strAircraftId As String, ByVal intVersionNo As Integer) As Integer
            Dim results() As Object = Me.Invoke("DeleteAircraft", New Object() {strAircraftId, intVersionNo})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DeleteAircraftAsync(ByVal strAircraftId As String, ByVal intVersionNo As Integer)
            Me.DeleteAircraftAsync(strAircraftId, intVersionNo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteAircraftAsync(ByVal strAircraftId As String, ByVal intVersionNo As Integer, ByVal userState As Object)
            If (Me.DeleteAircraftOperationCompleted Is Nothing) Then
                Me.DeleteAircraftOperationCompleted = AddressOf Me.OnDeleteAircraftOperationCompleted
            End If
            Me.InvokeAsync("DeleteAircraft", New Object() {strAircraftId, intVersionNo}, Me.DeleteAircraftOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteAircraftOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteAircraftCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteAircraftCompleted(Me, New DeleteAircraftCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateAircraft", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateAircraft(ByVal strAircraftId As String, ByVal strModelName As String, ByVal strRefChordOrigin As String, ByVal strRefChordLength As String, ByVal strRefStation As String, ByVal strIUEquConstC As String, ByVal strIUEquConstK As String, ByVal strMinOpWeightAdj As String, ByVal strMaxOpWeightAdj As String, ByVal strMinOpIUAdj As String, ByVal strMaxOpIUAdj As String, ByVal intVersionNo As Integer, ByVal strCreatedBy As String) As Integer
            Dim results() As Object = Me.Invoke("CreateAircraft", New Object() {strAircraftId, strModelName, strRefChordOrigin, strRefChordLength, strRefStation, strIUEquConstC, strIUEquConstK, strMinOpWeightAdj, strMaxOpWeightAdj, strMinOpIUAdj, strMaxOpIUAdj, intVersionNo, strCreatedBy})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateAircraftAsync(ByVal strAircraftId As String, ByVal strModelName As String, ByVal strRefChordOrigin As String, ByVal strRefChordLength As String, ByVal strRefStation As String, ByVal strIUEquConstC As String, ByVal strIUEquConstK As String, ByVal strMinOpWeightAdj As String, ByVal strMaxOpWeightAdj As String, ByVal strMinOpIUAdj As String, ByVal strMaxOpIUAdj As String, ByVal intVersionNo As Integer, ByVal strCreatedBy As String)
            Me.CreateAircraftAsync(strAircraftId, strModelName, strRefChordOrigin, strRefChordLength, strRefStation, strIUEquConstC, strIUEquConstK, strMinOpWeightAdj, strMaxOpWeightAdj, strMinOpIUAdj, strMaxOpIUAdj, intVersionNo, strCreatedBy, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateAircraftAsync(ByVal strAircraftId As String, ByVal strModelName As String, ByVal strRefChordOrigin As String, ByVal strRefChordLength As String, ByVal strRefStation As String, ByVal strIUEquConstC As String, ByVal strIUEquConstK As String, ByVal strMinOpWeightAdj As String, ByVal strMaxOpWeightAdj As String, ByVal strMinOpIUAdj As String, ByVal strMaxOpIUAdj As String, ByVal intVersionNo As Integer, ByVal strCreatedBy As String, ByVal userState As Object)
            If (Me.CreateAircraftOperationCompleted Is Nothing) Then
                Me.CreateAircraftOperationCompleted = AddressOf Me.OnCreateAircraftOperationCompleted
            End If
            Me.InvokeAsync("CreateAircraft", New Object() {strAircraftId, strModelName, strRefChordOrigin, strRefChordLength, strRefStation, strIUEquConstC, strIUEquConstK, strMinOpWeightAdj, strMaxOpWeightAdj, strMinOpIUAdj, strMaxOpIUAdj, intVersionNo, strCreatedBy}, Me.CreateAircraftOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateAircraftOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateAircraftCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateAircraftCompleted(Me, New CreateAircraftCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Is_Database_Upgrade_Running", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Is_Database_Upgrade_Running() As Integer
            Dim results() As Object = Me.Invoke("Is_Database_Upgrade_Running", New Object(-1) {})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Is_Database_Upgrade_RunningAsync()
            Me.Is_Database_Upgrade_RunningAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Is_Database_Upgrade_RunningAsync(ByVal userState As Object)
            If (Me.Is_Database_Upgrade_RunningOperationCompleted Is Nothing) Then
                Me.Is_Database_Upgrade_RunningOperationCompleted = AddressOf Me.OnIs_Database_Upgrade_RunningOperationCompleted
            End If
            Me.InvokeAsync("Is_Database_Upgrade_Running", New Object(-1) {}, Me.Is_Database_Upgrade_RunningOperationCompleted, userState)
        End Sub
        
        Private Sub OnIs_Database_Upgrade_RunningOperationCompleted(ByVal arg As Object)
            If (Not (Me.Is_Database_Upgrade_RunningCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Is_Database_Upgrade_RunningCompleted(Me, New Is_Database_Upgrade_RunningCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Start_Database_Upgrade_Session", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Start_Database_Upgrade_Session()
            Me.Invoke("Start_Database_Upgrade_Session", New Object(-1) {})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Start_Database_Upgrade_SessionAsync()
            Me.Start_Database_Upgrade_SessionAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Start_Database_Upgrade_SessionAsync(ByVal userState As Object)
            If (Me.Start_Database_Upgrade_SessionOperationCompleted Is Nothing) Then
                Me.Start_Database_Upgrade_SessionOperationCompleted = AddressOf Me.OnStart_Database_Upgrade_SessionOperationCompleted
            End If
            Me.InvokeAsync("Start_Database_Upgrade_Session", New Object(-1) {}, Me.Start_Database_Upgrade_SessionOperationCompleted, userState)
        End Sub
        
        Private Sub OnStart_Database_Upgrade_SessionOperationCompleted(ByVal arg As Object)
            If (Not (Me.Start_Database_Upgrade_SessionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Start_Database_Upgrade_SessionCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Cancel_Database_Upgrade_Session", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Cancel_Database_Upgrade_Session()
            Me.Invoke("Cancel_Database_Upgrade_Session", New Object(-1) {})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Cancel_Database_Upgrade_SessionAsync()
            Me.Cancel_Database_Upgrade_SessionAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Cancel_Database_Upgrade_SessionAsync(ByVal userState As Object)
            If (Me.Cancel_Database_Upgrade_SessionOperationCompleted Is Nothing) Then
                Me.Cancel_Database_Upgrade_SessionOperationCompleted = AddressOf Me.OnCancel_Database_Upgrade_SessionOperationCompleted
            End If
            Me.InvokeAsync("Cancel_Database_Upgrade_Session", New Object(-1) {}, Me.Cancel_Database_Upgrade_SessionOperationCompleted, userState)
        End Sub
        
        Private Sub OnCancel_Database_Upgrade_SessionOperationCompleted(ByVal arg As Object)
            If (Not (Me.Cancel_Database_Upgrade_SessionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Cancel_Database_Upgrade_SessionCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_Aircrafts", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Get_Aircrafts(ByVal strAircraftId As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("Get_Aircrafts", New Object() {strAircraftId})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Get_AircraftsAsync(ByVal strAircraftId As String)
            Me.Get_AircraftsAsync(strAircraftId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Get_AircraftsAsync(ByVal strAircraftId As String, ByVal userState As Object)
            If (Me.Get_AircraftsOperationCompleted Is Nothing) Then
                Me.Get_AircraftsOperationCompleted = AddressOf Me.OnGet_AircraftsOperationCompleted
            End If
            Me.InvokeAsync("Get_Aircrafts", New Object() {strAircraftId}, Me.Get_AircraftsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGet_AircraftsOperationCompleted(ByVal arg As Object)
            If (Not (Me.Get_AircraftsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Get_AircraftsCompleted(Me, New Get_AircraftsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateAircraft", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateAircraft(ByVal strAircraftId As String, ByVal strModelName As String, ByVal strRefChordOrigin As String, ByVal strRefChordLength As String, ByVal strRefStation As String, ByVal strIUEquConstC As String, ByVal strIUEquConstK As String, ByVal strMinOpWeightAdj As String, ByVal strMaxOpWeightAdj As String, ByVal strMinOpIUAdj As String, ByVal strMaxOpIUAdj As String, ByVal intVersionNo As Integer, ByVal strUpdatedBy As String) As Integer
            Dim results() As Object = Me.Invoke("UpdateAircraft", New Object() {strAircraftId, strModelName, strRefChordOrigin, strRefChordLength, strRefStation, strIUEquConstC, strIUEquConstK, strMinOpWeightAdj, strMaxOpWeightAdj, strMinOpIUAdj, strMaxOpIUAdj, intVersionNo, strUpdatedBy})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateAircraftAsync(ByVal strAircraftId As String, ByVal strModelName As String, ByVal strRefChordOrigin As String, ByVal strRefChordLength As String, ByVal strRefStation As String, ByVal strIUEquConstC As String, ByVal strIUEquConstK As String, ByVal strMinOpWeightAdj As String, ByVal strMaxOpWeightAdj As String, ByVal strMinOpIUAdj As String, ByVal strMaxOpIUAdj As String, ByVal intVersionNo As Integer, ByVal strUpdatedBy As String)
            Me.UpdateAircraftAsync(strAircraftId, strModelName, strRefChordOrigin, strRefChordLength, strRefStation, strIUEquConstC, strIUEquConstK, strMinOpWeightAdj, strMaxOpWeightAdj, strMinOpIUAdj, strMaxOpIUAdj, intVersionNo, strUpdatedBy, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateAircraftAsync(ByVal strAircraftId As String, ByVal strModelName As String, ByVal strRefChordOrigin As String, ByVal strRefChordLength As String, ByVal strRefStation As String, ByVal strIUEquConstC As String, ByVal strIUEquConstK As String, ByVal strMinOpWeightAdj As String, ByVal strMaxOpWeightAdj As String, ByVal strMinOpIUAdj As String, ByVal strMaxOpIUAdj As String, ByVal intVersionNo As Integer, ByVal strUpdatedBy As String, ByVal userState As Object)
            If (Me.UpdateAircraftOperationCompleted Is Nothing) Then
                Me.UpdateAircraftOperationCompleted = AddressOf Me.OnUpdateAircraftOperationCompleted
            End If
            Me.InvokeAsync("UpdateAircraft", New Object() {strAircraftId, strModelName, strRefChordOrigin, strRefChordLength, strRefStation, strIUEquConstC, strIUEquConstK, strMinOpWeightAdj, strMaxOpWeightAdj, strMinOpIUAdj, strMaxOpIUAdj, intVersionNo, strUpdatedBy}, Me.UpdateAircraftOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateAircraftOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateAircraftCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateAircraftCompleted(Me, New UpdateAircraftCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateAircraftConfig", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateAircraftConfig(ByVal strAircraftId As String, ByVal intACId As String, ByVal strTankRef As String, ByVal strAirconfig As String, ByVal strFuelTank As String, ByVal intVersionNo As Integer) As Integer
            Dim results() As Object = Me.Invoke("UpdateAircraftConfig", New Object() {strAircraftId, intACId, strTankRef, strAirconfig, strFuelTank, intVersionNo})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateAircraftConfigAsync(ByVal strAircraftId As String, ByVal intACId As String, ByVal strTankRef As String, ByVal strAirconfig As String, ByVal strFuelTank As String, ByVal intVersionNo As Integer)
            Me.UpdateAircraftConfigAsync(strAircraftId, intACId, strTankRef, strAirconfig, strFuelTank, intVersionNo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateAircraftConfigAsync(ByVal strAircraftId As String, ByVal intACId As String, ByVal strTankRef As String, ByVal strAirconfig As String, ByVal strFuelTank As String, ByVal intVersionNo As Integer, ByVal userState As Object)
            If (Me.UpdateAircraftConfigOperationCompleted Is Nothing) Then
                Me.UpdateAircraftConfigOperationCompleted = AddressOf Me.OnUpdateAircraftConfigOperationCompleted
            End If
            Me.InvokeAsync("UpdateAircraftConfig", New Object() {strAircraftId, intACId, strTankRef, strAirconfig, strFuelTank, intVersionNo}, Me.UpdateAircraftConfigOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateAircraftConfigOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateAircraftConfigCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateAircraftConfigCompleted(Me, New UpdateAircraftConfigCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_Aircraft_Config", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Get_Aircraft_Config(ByVal strTableId As String, ByVal strAircraftId As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("Get_Aircraft_Config", New Object() {strTableId, strAircraftId})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Get_Aircraft_ConfigAsync(ByVal strTableId As String, ByVal strAircraftId As String)
            Me.Get_Aircraft_ConfigAsync(strTableId, strAircraftId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Get_Aircraft_ConfigAsync(ByVal strTableId As String, ByVal strAircraftId As String, ByVal userState As Object)
            If (Me.Get_Aircraft_ConfigOperationCompleted Is Nothing) Then
                Me.Get_Aircraft_ConfigOperationCompleted = AddressOf Me.OnGet_Aircraft_ConfigOperationCompleted
            End If
            Me.InvokeAsync("Get_Aircraft_Config", New Object() {strTableId, strAircraftId}, Me.Get_Aircraft_ConfigOperationCompleted, userState)
        End Sub
        
        Private Sub OnGet_Aircraft_ConfigOperationCompleted(ByVal arg As Object)
            If (Not (Me.Get_Aircraft_ConfigCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Get_Aircraft_ConfigCompleted(Me, New Get_Aircraft_ConfigCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_Registration", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Get_Registration(ByVal strAircraftId As String, ByVal RegistrationID As Integer) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("Get_Registration", New Object() {strAircraftId, RegistrationID})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Get_RegistrationAsync(ByVal strAircraftId As String, ByVal RegistrationID As Integer)
            Me.Get_RegistrationAsync(strAircraftId, RegistrationID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Get_RegistrationAsync(ByVal strAircraftId As String, ByVal RegistrationID As Integer, ByVal userState As Object)
            If (Me.Get_RegistrationOperationCompleted Is Nothing) Then
                Me.Get_RegistrationOperationCompleted = AddressOf Me.OnGet_RegistrationOperationCompleted
            End If
            Me.InvokeAsync("Get_Registration", New Object() {strAircraftId, RegistrationID}, Me.Get_RegistrationOperationCompleted, userState)
        End Sub
        
        Private Sub OnGet_RegistrationOperationCompleted(ByVal arg As Object)
            If (Not (Me.Get_RegistrationCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Get_RegistrationCompleted(Me, New Get_RegistrationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateRegistration", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateRegistration(ByVal Registration_Id As Integer, ByVal Registration_Number As String, ByVal Aircraft_Id As String, ByVal MSN As String, ByVal Seat_Configuration As String, ByVal Load_Data_Sheet_Sef As String, ByVal Basic_Weight As Integer, ByVal Basic_Arm As Integer, ByVal Subfleet_Id As String, ByVal intVersionNo As Integer, ByVal strCreatedBy As String) As Integer
            Dim results() As Object = Me.Invoke("CreateRegistration", New Object() {Registration_Id, Registration_Number, Aircraft_Id, MSN, Seat_Configuration, Load_Data_Sheet_Sef, Basic_Weight, Basic_Arm, Subfleet_Id, intVersionNo, strCreatedBy})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateRegistrationAsync(ByVal Registration_Id As Integer, ByVal Registration_Number As String, ByVal Aircraft_Id As String, ByVal MSN As String, ByVal Seat_Configuration As String, ByVal Load_Data_Sheet_Sef As String, ByVal Basic_Weight As Integer, ByVal Basic_Arm As Integer, ByVal Subfleet_Id As String, ByVal intVersionNo As Integer, ByVal strCreatedBy As String)
            Me.CreateRegistrationAsync(Registration_Id, Registration_Number, Aircraft_Id, MSN, Seat_Configuration, Load_Data_Sheet_Sef, Basic_Weight, Basic_Arm, Subfleet_Id, intVersionNo, strCreatedBy, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateRegistrationAsync(ByVal Registration_Id As Integer, ByVal Registration_Number As String, ByVal Aircraft_Id As String, ByVal MSN As String, ByVal Seat_Configuration As String, ByVal Load_Data_Sheet_Sef As String, ByVal Basic_Weight As Integer, ByVal Basic_Arm As Integer, ByVal Subfleet_Id As String, ByVal intVersionNo As Integer, ByVal strCreatedBy As String, ByVal userState As Object)
            If (Me.CreateRegistrationOperationCompleted Is Nothing) Then
                Me.CreateRegistrationOperationCompleted = AddressOf Me.OnCreateRegistrationOperationCompleted
            End If
            Me.InvokeAsync("CreateRegistration", New Object() {Registration_Id, Registration_Number, Aircraft_Id, MSN, Seat_Configuration, Load_Data_Sheet_Sef, Basic_Weight, Basic_Arm, Subfleet_Id, intVersionNo, strCreatedBy}, Me.CreateRegistrationOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateRegistrationOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateRegistrationCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateRegistrationCompleted(Me, New CreateRegistrationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateRegistration", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateRegistration(ByVal Registration_Id As Integer, ByVal Registration_Number As String, ByVal Aircraft_Id As String, ByVal MSN As String, ByVal Seat_Configuration As String, ByVal Load_Data_Sheet_Sef As String, ByVal Basic_Weight As Integer, ByVal Basic_Arm As Integer, ByVal Subfleet_Id As String, ByVal intVersionNo As Integer, ByVal strCUpdatedBy As String) As Integer
            Dim results() As Object = Me.Invoke("UpdateRegistration", New Object() {Registration_Id, Registration_Number, Aircraft_Id, MSN, Seat_Configuration, Load_Data_Sheet_Sef, Basic_Weight, Basic_Arm, Subfleet_Id, intVersionNo, strCUpdatedBy})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateRegistrationAsync(ByVal Registration_Id As Integer, ByVal Registration_Number As String, ByVal Aircraft_Id As String, ByVal MSN As String, ByVal Seat_Configuration As String, ByVal Load_Data_Sheet_Sef As String, ByVal Basic_Weight As Integer, ByVal Basic_Arm As Integer, ByVal Subfleet_Id As String, ByVal intVersionNo As Integer, ByVal strCUpdatedBy As String)
            Me.UpdateRegistrationAsync(Registration_Id, Registration_Number, Aircraft_Id, MSN, Seat_Configuration, Load_Data_Sheet_Sef, Basic_Weight, Basic_Arm, Subfleet_Id, intVersionNo, strCUpdatedBy, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateRegistrationAsync(ByVal Registration_Id As Integer, ByVal Registration_Number As String, ByVal Aircraft_Id As String, ByVal MSN As String, ByVal Seat_Configuration As String, ByVal Load_Data_Sheet_Sef As String, ByVal Basic_Weight As Integer, ByVal Basic_Arm As Integer, ByVal Subfleet_Id As String, ByVal intVersionNo As Integer, ByVal strCUpdatedBy As String, ByVal userState As Object)
            If (Me.UpdateRegistrationOperationCompleted Is Nothing) Then
                Me.UpdateRegistrationOperationCompleted = AddressOf Me.OnUpdateRegistrationOperationCompleted
            End If
            Me.InvokeAsync("UpdateRegistration", New Object() {Registration_Id, Registration_Number, Aircraft_Id, MSN, Seat_Configuration, Load_Data_Sheet_Sef, Basic_Weight, Basic_Arm, Subfleet_Id, intVersionNo, strCUpdatedBy}, Me.UpdateRegistrationOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateRegistrationOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateRegistrationCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateRegistrationCompleted(Me, New UpdateRegistrationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteRegistration", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DeleteRegistration(ByVal RegistrationId As Integer, ByVal intVersionNo As Integer) As Integer
            Dim results() As Object = Me.Invoke("DeleteRegistration", New Object() {RegistrationId, intVersionNo})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DeleteRegistrationAsync(ByVal RegistrationId As Integer, ByVal intVersionNo As Integer)
            Me.DeleteRegistrationAsync(RegistrationId, intVersionNo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteRegistrationAsync(ByVal RegistrationId As Integer, ByVal intVersionNo As Integer, ByVal userState As Object)
            If (Me.DeleteRegistrationOperationCompleted Is Nothing) Then
                Me.DeleteRegistrationOperationCompleted = AddressOf Me.OnDeleteRegistrationOperationCompleted
            End If
            Me.InvokeAsync("DeleteRegistration", New Object() {RegistrationId, intVersionNo}, Me.DeleteRegistrationOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteRegistrationOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteRegistrationCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteRegistrationCompleted(Me, New DeleteRegistrationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateSubfleet", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateSubfleet(ByVal strSubfleetId As String, ByVal strAircraftId As String, ByVal strMaxTaxiWeight As String, ByVal strMaxTakeoffWeight As String, ByVal strMaxLandingWeight As String, ByVal strMaxZeroFuelWeight As String, ByVal strFlightDeckWeight As String, ByVal strCabinCrewWeight As String, ByVal intVersionNo As Integer, ByVal strCreatedBy As String) As Integer
            Dim results() As Object = Me.Invoke("CreateSubfleet", New Object() {strSubfleetId, strAircraftId, strMaxTaxiWeight, strMaxTakeoffWeight, strMaxLandingWeight, strMaxZeroFuelWeight, strFlightDeckWeight, strCabinCrewWeight, intVersionNo, strCreatedBy})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateSubfleetAsync(ByVal strSubfleetId As String, ByVal strAircraftId As String, ByVal strMaxTaxiWeight As String, ByVal strMaxTakeoffWeight As String, ByVal strMaxLandingWeight As String, ByVal strMaxZeroFuelWeight As String, ByVal strFlightDeckWeight As String, ByVal strCabinCrewWeight As String, ByVal intVersionNo As Integer, ByVal strCreatedBy As String)
            Me.CreateSubfleetAsync(strSubfleetId, strAircraftId, strMaxTaxiWeight, strMaxTakeoffWeight, strMaxLandingWeight, strMaxZeroFuelWeight, strFlightDeckWeight, strCabinCrewWeight, intVersionNo, strCreatedBy, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateSubfleetAsync(ByVal strSubfleetId As String, ByVal strAircraftId As String, ByVal strMaxTaxiWeight As String, ByVal strMaxTakeoffWeight As String, ByVal strMaxLandingWeight As String, ByVal strMaxZeroFuelWeight As String, ByVal strFlightDeckWeight As String, ByVal strCabinCrewWeight As String, ByVal intVersionNo As Integer, ByVal strCreatedBy As String, ByVal userState As Object)
            If (Me.CreateSubfleetOperationCompleted Is Nothing) Then
                Me.CreateSubfleetOperationCompleted = AddressOf Me.OnCreateSubfleetOperationCompleted
            End If
            Me.InvokeAsync("CreateSubfleet", New Object() {strSubfleetId, strAircraftId, strMaxTaxiWeight, strMaxTakeoffWeight, strMaxLandingWeight, strMaxZeroFuelWeight, strFlightDeckWeight, strCabinCrewWeight, intVersionNo, strCreatedBy}, Me.CreateSubfleetOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateSubfleetOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateSubfleetCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateSubfleetCompleted(Me, New CreateSubfleetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateSubfleet", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateSubfleet(ByVal strSubfleetId As String, ByVal strAircraftId As String, ByVal strMaxTaxiWeight As String, ByVal strMaxTakeoffWeight As String, ByVal strMaxLandingWeight As String, ByVal strMaxZeroFuelWeight As String, ByVal strFlightDeckWeight As String, ByVal strCabinCrewWeight As String, ByVal intVersionNo As Integer, ByVal strUpdatedBy As String) As Integer
            Dim results() As Object = Me.Invoke("UpdateSubfleet", New Object() {strSubfleetId, strAircraftId, strMaxTaxiWeight, strMaxTakeoffWeight, strMaxLandingWeight, strMaxZeroFuelWeight, strFlightDeckWeight, strCabinCrewWeight, intVersionNo, strUpdatedBy})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateSubfleetAsync(ByVal strSubfleetId As String, ByVal strAircraftId As String, ByVal strMaxTaxiWeight As String, ByVal strMaxTakeoffWeight As String, ByVal strMaxLandingWeight As String, ByVal strMaxZeroFuelWeight As String, ByVal strFlightDeckWeight As String, ByVal strCabinCrewWeight As String, ByVal intVersionNo As Integer, ByVal strUpdatedBy As String)
            Me.UpdateSubfleetAsync(strSubfleetId, strAircraftId, strMaxTaxiWeight, strMaxTakeoffWeight, strMaxLandingWeight, strMaxZeroFuelWeight, strFlightDeckWeight, strCabinCrewWeight, intVersionNo, strUpdatedBy, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateSubfleetAsync(ByVal strSubfleetId As String, ByVal strAircraftId As String, ByVal strMaxTaxiWeight As String, ByVal strMaxTakeoffWeight As String, ByVal strMaxLandingWeight As String, ByVal strMaxZeroFuelWeight As String, ByVal strFlightDeckWeight As String, ByVal strCabinCrewWeight As String, ByVal intVersionNo As Integer, ByVal strUpdatedBy As String, ByVal userState As Object)
            If (Me.UpdateSubfleetOperationCompleted Is Nothing) Then
                Me.UpdateSubfleetOperationCompleted = AddressOf Me.OnUpdateSubfleetOperationCompleted
            End If
            Me.InvokeAsync("UpdateSubfleet", New Object() {strSubfleetId, strAircraftId, strMaxTaxiWeight, strMaxTakeoffWeight, strMaxLandingWeight, strMaxZeroFuelWeight, strFlightDeckWeight, strCabinCrewWeight, intVersionNo, strUpdatedBy}, Me.UpdateSubfleetOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateSubfleetOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateSubfleetCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateSubfleetCompleted(Me, New UpdateSubfleetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_Subfleet", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Get_Subfleet(ByVal strAircraftId As String, ByVal strSubfleetId As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("Get_Subfleet", New Object() {strAircraftId, strSubfleetId})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Get_SubfleetAsync(ByVal strAircraftId As String, ByVal strSubfleetId As String)
            Me.Get_SubfleetAsync(strAircraftId, strSubfleetId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Get_SubfleetAsync(ByVal strAircraftId As String, ByVal strSubfleetId As String, ByVal userState As Object)
            If (Me.Get_SubfleetOperationCompleted Is Nothing) Then
                Me.Get_SubfleetOperationCompleted = AddressOf Me.OnGet_SubfleetOperationCompleted
            End If
            Me.InvokeAsync("Get_Subfleet", New Object() {strAircraftId, strSubfleetId}, Me.Get_SubfleetOperationCompleted, userState)
        End Sub
        
        Private Sub OnGet_SubfleetOperationCompleted(ByVal arg As Object)
            If (Not (Me.Get_SubfleetCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Get_SubfleetCompleted(Me, New Get_SubfleetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteSubfleet", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DeleteSubfleet(ByVal strSubfleetId As String, ByVal intVersionNo As Integer) As Integer
            Dim results() As Object = Me.Invoke("DeleteSubfleet", New Object() {strSubfleetId, intVersionNo})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DeleteSubfleetAsync(ByVal strSubfleetId As String, ByVal intVersionNo As Integer)
            Me.DeleteSubfleetAsync(strSubfleetId, intVersionNo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteSubfleetAsync(ByVal strSubfleetId As String, ByVal intVersionNo As Integer, ByVal userState As Object)
            If (Me.DeleteSubfleetOperationCompleted Is Nothing) Then
                Me.DeleteSubfleetOperationCompleted = AddressOf Me.OnDeleteSubfleetOperationCompleted
            End If
            Me.InvokeAsync("DeleteSubfleet", New Object() {strSubfleetId, intVersionNo}, Me.DeleteSubfleetOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteSubfleetOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteSubfleetCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteSubfleetCompleted(Me, New DeleteSubfleetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_GalleyArms", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Get_GalleyArms(ByVal strTableId As String, ByVal strAircraftId As String, ByVal strChoiceID As String, ByVal strSubFleetID As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("Get_GalleyArms", New Object() {strTableId, strAircraftId, strChoiceID, strSubFleetID})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Get_GalleyArmsAsync(ByVal strTableId As String, ByVal strAircraftId As String, ByVal strChoiceID As String, ByVal strSubFleetID As String)
            Me.Get_GalleyArmsAsync(strTableId, strAircraftId, strChoiceID, strSubFleetID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Get_GalleyArmsAsync(ByVal strTableId As String, ByVal strAircraftId As String, ByVal strChoiceID As String, ByVal strSubFleetID As String, ByVal userState As Object)
            If (Me.Get_GalleyArmsOperationCompleted Is Nothing) Then
                Me.Get_GalleyArmsOperationCompleted = AddressOf Me.OnGet_GalleyArmsOperationCompleted
            End If
            Me.InvokeAsync("Get_GalleyArms", New Object() {strTableId, strAircraftId, strChoiceID, strSubFleetID}, Me.Get_GalleyArmsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGet_GalleyArmsOperationCompleted(ByVal arg As Object)
            If (Not (Me.Get_GalleyArmsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Get_GalleyArmsCompleted(Me, New Get_GalleyArmsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Create_Update_GalleyArms", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Create_Update_GalleyArms(ByVal Crew_Galley_Arm_ID As Long, ByVal crew_galley_desig_cl_id As String, ByVal strChoiceID As String, ByVal arm As Decimal, ByVal strAircraftId As String, ByVal VersionNo As Integer, ByVal strSubFleetID As String, ByVal LastUpdatedBy As String) As Integer
            Dim results() As Object = Me.Invoke("Create_Update_GalleyArms", New Object() {Crew_Galley_Arm_ID, crew_galley_desig_cl_id, strChoiceID, arm, strAircraftId, VersionNo, strSubFleetID, LastUpdatedBy})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Create_Update_GalleyArmsAsync(ByVal Crew_Galley_Arm_ID As Long, ByVal crew_galley_desig_cl_id As String, ByVal strChoiceID As String, ByVal arm As Decimal, ByVal strAircraftId As String, ByVal VersionNo As Integer, ByVal strSubFleetID As String, ByVal LastUpdatedBy As String)
            Me.Create_Update_GalleyArmsAsync(Crew_Galley_Arm_ID, crew_galley_desig_cl_id, strChoiceID, arm, strAircraftId, VersionNo, strSubFleetID, LastUpdatedBy, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Create_Update_GalleyArmsAsync(ByVal Crew_Galley_Arm_ID As Long, ByVal crew_galley_desig_cl_id As String, ByVal strChoiceID As String, ByVal arm As Decimal, ByVal strAircraftId As String, ByVal VersionNo As Integer, ByVal strSubFleetID As String, ByVal LastUpdatedBy As String, ByVal userState As Object)
            If (Me.Create_Update_GalleyArmsOperationCompleted Is Nothing) Then
                Me.Create_Update_GalleyArmsOperationCompleted = AddressOf Me.OnCreate_Update_GalleyArmsOperationCompleted
            End If
            Me.InvokeAsync("Create_Update_GalleyArms", New Object() {Crew_Galley_Arm_ID, crew_galley_desig_cl_id, strChoiceID, arm, strAircraftId, VersionNo, strSubFleetID, LastUpdatedBy}, Me.Create_Update_GalleyArmsOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreate_Update_GalleyArmsOperationCompleted(ByVal arg As Object)
            If (Not (Me.Create_Update_GalleyArmsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Create_Update_GalleyArmsCompleted(Me, New Create_Update_GalleyArmsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_ZoneDefinition", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Get_ZoneDefinition(ByVal strTableId As String, ByVal strAircraftId As String, ByVal strSubFleetID As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("Get_ZoneDefinition", New Object() {strTableId, strAircraftId, strSubFleetID})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Get_ZoneDefinitionAsync(ByVal strTableId As String, ByVal strAircraftId As String, ByVal strSubFleetID As String)
            Me.Get_ZoneDefinitionAsync(strTableId, strAircraftId, strSubFleetID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Get_ZoneDefinitionAsync(ByVal strTableId As String, ByVal strAircraftId As String, ByVal strSubFleetID As String, ByVal userState As Object)
            If (Me.Get_ZoneDefinitionOperationCompleted Is Nothing) Then
                Me.Get_ZoneDefinitionOperationCompleted = AddressOf Me.OnGet_ZoneDefinitionOperationCompleted
            End If
            Me.InvokeAsync("Get_ZoneDefinition", New Object() {strTableId, strAircraftId, strSubFleetID}, Me.Get_ZoneDefinitionOperationCompleted, userState)
        End Sub
        
        Private Sub OnGet_ZoneDefinitionOperationCompleted(ByVal arg As Object)
            If (Not (Me.Get_ZoneDefinitionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Get_ZoneDefinitionCompleted(Me, New Get_ZoneDefinitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Create_Update_ZoneDefination", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Create_Update_ZoneDefination(ByVal zone_definition_id As Long, ByVal designation_id As String, ByVal arm As Decimal, ByVal max_capacity As Integer, ByVal first_row_number As Integer, ByVal last_row_number As Integer, ByVal Description As String, ByVal strAircraftId As String, ByVal VersionNo As Integer, ByVal strSubFleetID As String, ByVal LastUpdatedBy As String) As Integer
            Dim results() As Object = Me.Invoke("Create_Update_ZoneDefination", New Object() {zone_definition_id, designation_id, arm, max_capacity, first_row_number, last_row_number, Description, strAircraftId, VersionNo, strSubFleetID, LastUpdatedBy})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Create_Update_ZoneDefinationAsync(ByVal zone_definition_id As Long, ByVal designation_id As String, ByVal arm As Decimal, ByVal max_capacity As Integer, ByVal first_row_number As Integer, ByVal last_row_number As Integer, ByVal Description As String, ByVal strAircraftId As String, ByVal VersionNo As Integer, ByVal strSubFleetID As String, ByVal LastUpdatedBy As String)
            Me.Create_Update_ZoneDefinationAsync(zone_definition_id, designation_id, arm, max_capacity, first_row_number, last_row_number, Description, strAircraftId, VersionNo, strSubFleetID, LastUpdatedBy, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Create_Update_ZoneDefinationAsync(ByVal zone_definition_id As Long, ByVal designation_id As String, ByVal arm As Decimal, ByVal max_capacity As Integer, ByVal first_row_number As Integer, ByVal last_row_number As Integer, ByVal Description As String, ByVal strAircraftId As String, ByVal VersionNo As Integer, ByVal strSubFleetID As String, ByVal LastUpdatedBy As String, ByVal userState As Object)
            If (Me.Create_Update_ZoneDefinationOperationCompleted Is Nothing) Then
                Me.Create_Update_ZoneDefinationOperationCompleted = AddressOf Me.OnCreate_Update_ZoneDefinationOperationCompleted
            End If
            Me.InvokeAsync("Create_Update_ZoneDefination", New Object() {zone_definition_id, designation_id, arm, max_capacity, first_row_number, last_row_number, Description, strAircraftId, VersionNo, strSubFleetID, LastUpdatedBy}, Me.Create_Update_ZoneDefinationOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreate_Update_ZoneDefinationOperationCompleted(ByVal arg As Object)
            If (Not (Me.Create_Update_ZoneDefinationCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Create_Update_ZoneDefinationCompleted(Me, New Create_Update_ZoneDefinationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_Aircraft_Config_Adjustments", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Get_Aircraft_Config_Adjustments(ByVal strTableId As String, ByVal strAircraftId As String, ByVal strSubFleetID As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("Get_Aircraft_Config_Adjustments", New Object() {strTableId, strAircraftId, strSubFleetID})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Get_Aircraft_Config_AdjustmentsAsync(ByVal strTableId As String, ByVal strAircraftId As String, ByVal strSubFleetID As String)
            Me.Get_Aircraft_Config_AdjustmentsAsync(strTableId, strAircraftId, strSubFleetID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Get_Aircraft_Config_AdjustmentsAsync(ByVal strTableId As String, ByVal strAircraftId As String, ByVal strSubFleetID As String, ByVal userState As Object)
            If (Me.Get_Aircraft_Config_AdjustmentsOperationCompleted Is Nothing) Then
                Me.Get_Aircraft_Config_AdjustmentsOperationCompleted = AddressOf Me.OnGet_Aircraft_Config_AdjustmentsOperationCompleted
            End If
            Me.InvokeAsync("Get_Aircraft_Config_Adjustments", New Object() {strTableId, strAircraftId, strSubFleetID}, Me.Get_Aircraft_Config_AdjustmentsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGet_Aircraft_Config_AdjustmentsOperationCompleted(ByVal arg As Object)
            If (Not (Me.Get_Aircraft_Config_AdjustmentsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Get_Aircraft_Config_AdjustmentsCompleted(Me, New Get_Aircraft_Config_AdjustmentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Create_Update_AirCraftConfigAdj", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Create_Update_AirCraftConfigAdj(ByVal air_conf_adjust_id As Long, ByVal reference_cl_id As String, ByVal is_enabled As String, ByVal empty_weight As Integer, ByVal arm As Decimal, ByVal strAircraftId As String, ByVal VersionNo As Integer, ByVal strSubFleetID As String, ByVal LastUpdatedBy As String) As Integer
            Dim results() As Object = Me.Invoke("Create_Update_AirCraftConfigAdj", New Object() {air_conf_adjust_id, reference_cl_id, is_enabled, empty_weight, arm, strAircraftId, VersionNo, strSubFleetID, LastUpdatedBy})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Create_Update_AirCraftConfigAdjAsync(ByVal air_conf_adjust_id As Long, ByVal reference_cl_id As String, ByVal is_enabled As String, ByVal empty_weight As Integer, ByVal arm As Decimal, ByVal strAircraftId As String, ByVal VersionNo As Integer, ByVal strSubFleetID As String, ByVal LastUpdatedBy As String)
            Me.Create_Update_AirCraftConfigAdjAsync(air_conf_adjust_id, reference_cl_id, is_enabled, empty_weight, arm, strAircraftId, VersionNo, strSubFleetID, LastUpdatedBy, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Create_Update_AirCraftConfigAdjAsync(ByVal air_conf_adjust_id As Long, ByVal reference_cl_id As String, ByVal is_enabled As String, ByVal empty_weight As Integer, ByVal arm As Decimal, ByVal strAircraftId As String, ByVal VersionNo As Integer, ByVal strSubFleetID As String, ByVal LastUpdatedBy As String, ByVal userState As Object)
            If (Me.Create_Update_AirCraftConfigAdjOperationCompleted Is Nothing) Then
                Me.Create_Update_AirCraftConfigAdjOperationCompleted = AddressOf Me.OnCreate_Update_AirCraftConfigAdjOperationCompleted
            End If
            Me.InvokeAsync("Create_Update_AirCraftConfigAdj", New Object() {air_conf_adjust_id, reference_cl_id, is_enabled, empty_weight, arm, strAircraftId, VersionNo, strSubFleetID, LastUpdatedBy}, Me.Create_Update_AirCraftConfigAdjOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreate_Update_AirCraftConfigAdjOperationCompleted(ByVal arg As Object)
            If (Not (Me.Create_Update_AirCraftConfigAdjCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Create_Update_AirCraftConfigAdjCompleted(Me, New Create_Update_AirCraftConfigAdjCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateChoice_List", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateChoice_List(ByVal strchoice_list_id As String, ByVal strdescription As String, ByVal is_active As Integer, ByVal intVersionNo As Integer, ByVal strCreatedBy As String) As Integer
            Dim results() As Object = Me.Invoke("CreateChoice_List", New Object() {strchoice_list_id, strdescription, is_active, intVersionNo, strCreatedBy})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateChoice_ListAsync(ByVal strchoice_list_id As String, ByVal strdescription As String, ByVal is_active As Integer, ByVal intVersionNo As Integer, ByVal strCreatedBy As String)
            Me.CreateChoice_ListAsync(strchoice_list_id, strdescription, is_active, intVersionNo, strCreatedBy, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateChoice_ListAsync(ByVal strchoice_list_id As String, ByVal strdescription As String, ByVal is_active As Integer, ByVal intVersionNo As Integer, ByVal strCreatedBy As String, ByVal userState As Object)
            If (Me.CreateChoice_ListOperationCompleted Is Nothing) Then
                Me.CreateChoice_ListOperationCompleted = AddressOf Me.OnCreateChoice_ListOperationCompleted
            End If
            Me.InvokeAsync("CreateChoice_List", New Object() {strchoice_list_id, strdescription, is_active, intVersionNo, strCreatedBy}, Me.CreateChoice_ListOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateChoice_ListOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateChoice_ListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateChoice_ListCompleted(Me, New CreateChoice_ListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteChoice_List", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DeleteChoice_List(ByVal strChoice_list_Id As String, ByVal intVersionNo As Integer) As Integer
            Dim results() As Object = Me.Invoke("DeleteChoice_List", New Object() {strChoice_list_Id, intVersionNo})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DeleteChoice_ListAsync(ByVal strChoice_list_Id As String, ByVal intVersionNo As Integer)
            Me.DeleteChoice_ListAsync(strChoice_list_Id, intVersionNo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteChoice_ListAsync(ByVal strChoice_list_Id As String, ByVal intVersionNo As Integer, ByVal userState As Object)
            If (Me.DeleteChoice_ListOperationCompleted Is Nothing) Then
                Me.DeleteChoice_ListOperationCompleted = AddressOf Me.OnDeleteChoice_ListOperationCompleted
            End If
            Me.InvokeAsync("DeleteChoice_List", New Object() {strChoice_list_Id, intVersionNo}, Me.DeleteChoice_ListOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteChoice_ListOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteChoice_ListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteChoice_ListCompleted(Me, New DeleteChoice_ListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateChoice_List", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateChoice_List(ByVal strchoice_list_id As String, ByVal strdescription As String, ByVal is_active As Integer, ByVal intVersionNo As Integer) As Integer
            Dim results() As Object = Me.Invoke("UpdateChoice_List", New Object() {strchoice_list_id, strdescription, is_active, intVersionNo})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateChoice_ListAsync(ByVal strchoice_list_id As String, ByVal strdescription As String, ByVal is_active As Integer, ByVal intVersionNo As Integer)
            Me.UpdateChoice_ListAsync(strchoice_list_id, strdescription, is_active, intVersionNo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateChoice_ListAsync(ByVal strchoice_list_id As String, ByVal strdescription As String, ByVal is_active As Integer, ByVal intVersionNo As Integer, ByVal userState As Object)
            If (Me.UpdateChoice_ListOperationCompleted Is Nothing) Then
                Me.UpdateChoice_ListOperationCompleted = AddressOf Me.OnUpdateChoice_ListOperationCompleted
            End If
            Me.InvokeAsync("UpdateChoice_List", New Object() {strchoice_list_id, strdescription, is_active, intVersionNo}, Me.UpdateChoice_ListOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateChoice_ListOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateChoice_ListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateChoice_ListCompleted(Me, New UpdateChoice_ListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_ChoiceList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Get_ChoiceList(ByVal strChoice_list_id As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("Get_ChoiceList", New Object() {strChoice_list_id})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Get_ChoiceListAsync(ByVal strChoice_list_id As String)
            Me.Get_ChoiceListAsync(strChoice_list_id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Get_ChoiceListAsync(ByVal strChoice_list_id As String, ByVal userState As Object)
            If (Me.Get_ChoiceListOperationCompleted Is Nothing) Then
                Me.Get_ChoiceListOperationCompleted = AddressOf Me.OnGet_ChoiceListOperationCompleted
            End If
            Me.InvokeAsync("Get_ChoiceList", New Object() {strChoice_list_id}, Me.Get_ChoiceListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGet_ChoiceListOperationCompleted(ByVal arg As Object)
            If (Not (Me.Get_ChoiceListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Get_ChoiceListCompleted(Me, New Get_ChoiceListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateChoices", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateChoices(ByVal straircraft_id As String, ByVal strchoices_id As String, ByVal strchoice_list_id As String, ByVal strdescription As String, ByVal is_default As Integer, ByVal is_active As Integer, ByVal intVersionNo As Integer, ByVal strCreatedBy As String) As Integer
            Dim results() As Object = Me.Invoke("CreateChoices", New Object() {straircraft_id, strchoices_id, strchoice_list_id, strdescription, is_default, is_active, intVersionNo, strCreatedBy})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateChoicesAsync(ByVal straircraft_id As String, ByVal strchoices_id As String, ByVal strchoice_list_id As String, ByVal strdescription As String, ByVal is_default As Integer, ByVal is_active As Integer, ByVal intVersionNo As Integer, ByVal strCreatedBy As String)
            Me.CreateChoicesAsync(straircraft_id, strchoices_id, strchoice_list_id, strdescription, is_default, is_active, intVersionNo, strCreatedBy, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateChoicesAsync(ByVal straircraft_id As String, ByVal strchoices_id As String, ByVal strchoice_list_id As String, ByVal strdescription As String, ByVal is_default As Integer, ByVal is_active As Integer, ByVal intVersionNo As Integer, ByVal strCreatedBy As String, ByVal userState As Object)
            If (Me.CreateChoicesOperationCompleted Is Nothing) Then
                Me.CreateChoicesOperationCompleted = AddressOf Me.OnCreateChoicesOperationCompleted
            End If
            Me.InvokeAsync("CreateChoices", New Object() {straircraft_id, strchoices_id, strchoice_list_id, strdescription, is_default, is_active, intVersionNo, strCreatedBy}, Me.CreateChoicesOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateChoicesOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateChoicesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateChoicesCompleted(Me, New CreateChoicesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateChoices", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateChoices(ByVal strchoices_id As String, ByVal strchoice_list_id As String, ByVal strdescription As String, ByVal is_default As Integer, ByVal is_active As Integer, ByVal intVersionNo As Integer, ByVal strCreatedBy As String) As Integer
            Dim results() As Object = Me.Invoke("UpdateChoices", New Object() {strchoices_id, strchoice_list_id, strdescription, is_default, is_active, intVersionNo, strCreatedBy})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateChoicesAsync(ByVal strchoices_id As String, ByVal strchoice_list_id As String, ByVal strdescription As String, ByVal is_default As Integer, ByVal is_active As Integer, ByVal intVersionNo As Integer, ByVal strCreatedBy As String)
            Me.UpdateChoicesAsync(strchoices_id, strchoice_list_id, strdescription, is_default, is_active, intVersionNo, strCreatedBy, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateChoicesAsync(ByVal strchoices_id As String, ByVal strchoice_list_id As String, ByVal strdescription As String, ByVal is_default As Integer, ByVal is_active As Integer, ByVal intVersionNo As Integer, ByVal strCreatedBy As String, ByVal userState As Object)
            If (Me.UpdateChoicesOperationCompleted Is Nothing) Then
                Me.UpdateChoicesOperationCompleted = AddressOf Me.OnUpdateChoicesOperationCompleted
            End If
            Me.InvokeAsync("UpdateChoices", New Object() {strchoices_id, strchoice_list_id, strdescription, is_default, is_active, intVersionNo, strCreatedBy}, Me.UpdateChoicesOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateChoicesOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateChoicesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateChoicesCompleted(Me, New UpdateChoicesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_Choices", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Get_Choices(ByVal straircraft_id As String, ByVal strchoices_id As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("Get_Choices", New Object() {straircraft_id, strchoices_id})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Get_ChoicesAsync(ByVal straircraft_id As String, ByVal strchoices_id As String)
            Me.Get_ChoicesAsync(straircraft_id, strchoices_id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Get_ChoicesAsync(ByVal straircraft_id As String, ByVal strchoices_id As String, ByVal userState As Object)
            If (Me.Get_ChoicesOperationCompleted Is Nothing) Then
                Me.Get_ChoicesOperationCompleted = AddressOf Me.OnGet_ChoicesOperationCompleted
            End If
            Me.InvokeAsync("Get_Choices", New Object() {straircraft_id, strchoices_id}, Me.Get_ChoicesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGet_ChoicesOperationCompleted(ByVal arg As Object)
            If (Not (Me.Get_ChoicesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Get_ChoicesCompleted(Me, New Get_ChoicesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteChoices", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DeleteChoices(ByVal strChoices_Id As String, ByVal intVersionNo As Integer) As Integer
            Dim results() As Object = Me.Invoke("DeleteChoices", New Object() {strChoices_Id, intVersionNo})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DeleteChoicesAsync(ByVal strChoices_Id As String, ByVal intVersionNo As Integer)
            Me.DeleteChoicesAsync(strChoices_Id, intVersionNo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteChoicesAsync(ByVal strChoices_Id As String, ByVal intVersionNo As Integer, ByVal userState As Object)
            If (Me.DeleteChoicesOperationCompleted Is Nothing) Then
                Me.DeleteChoicesOperationCompleted = AddressOf Me.OnDeleteChoicesOperationCompleted
            End If
            Me.InvokeAsync("DeleteChoices", New Object() {strChoices_Id, intVersionNo}, Me.DeleteChoicesOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteChoicesOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteChoicesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteChoicesCompleted(Me, New DeleteChoicesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_ULDDefiniton", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Get_ULDDefiniton(ByVal strTabeleId As Integer, ByVal straircraft_id As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("Get_ULDDefiniton", New Object() {strTabeleId, straircraft_id})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Get_ULDDefinitonAsync(ByVal strTabeleId As Integer, ByVal straircraft_id As String)
            Me.Get_ULDDefinitonAsync(strTabeleId, straircraft_id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Get_ULDDefinitonAsync(ByVal strTabeleId As Integer, ByVal straircraft_id As String, ByVal userState As Object)
            If (Me.Get_ULDDefinitonOperationCompleted Is Nothing) Then
                Me.Get_ULDDefinitonOperationCompleted = AddressOf Me.OnGet_ULDDefinitonOperationCompleted
            End If
            Me.InvokeAsync("Get_ULDDefiniton", New Object() {strTabeleId, straircraft_id}, Me.Get_ULDDefinitonOperationCompleted, userState)
        End Sub
        
        Private Sub OnGet_ULDDefinitonOperationCompleted(ByVal arg As Object)
            If (Not (Me.Get_ULDDefinitonCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Get_ULDDefinitonCompleted(Me, New Get_ULDDefinitonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Create_Update_ULDDefinition", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Create_Update_ULDDefinition(ByVal struld_definition_id As Integer, ByVal struld_cl_id As String, ByVal allow_cargo As Boolean, ByVal allow_bags As Boolean, ByVal strtare_weight As Integer, ByVal straircraft_id As String, ByVal intVersionNo As Integer) As Integer
            Dim results() As Object = Me.Invoke("Create_Update_ULDDefinition", New Object() {struld_definition_id, struld_cl_id, allow_cargo, allow_bags, strtare_weight, straircraft_id, intVersionNo})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Create_Update_ULDDefinitionAsync(ByVal struld_definition_id As Integer, ByVal struld_cl_id As String, ByVal allow_cargo As Boolean, ByVal allow_bags As Boolean, ByVal strtare_weight As Integer, ByVal straircraft_id As String, ByVal intVersionNo As Integer)
            Me.Create_Update_ULDDefinitionAsync(struld_definition_id, struld_cl_id, allow_cargo, allow_bags, strtare_weight, straircraft_id, intVersionNo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Create_Update_ULDDefinitionAsync(ByVal struld_definition_id As Integer, ByVal struld_cl_id As String, ByVal allow_cargo As Boolean, ByVal allow_bags As Boolean, ByVal strtare_weight As Integer, ByVal straircraft_id As String, ByVal intVersionNo As Integer, ByVal userState As Object)
            If (Me.Create_Update_ULDDefinitionOperationCompleted Is Nothing) Then
                Me.Create_Update_ULDDefinitionOperationCompleted = AddressOf Me.OnCreate_Update_ULDDefinitionOperationCompleted
            End If
            Me.InvokeAsync("Create_Update_ULDDefinition", New Object() {struld_definition_id, struld_cl_id, allow_cargo, allow_bags, strtare_weight, straircraft_id, intVersionNo}, Me.Create_Update_ULDDefinitionOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreate_Update_ULDDefinitionOperationCompleted(ByVal arg As Object)
            If (Not (Me.Create_Update_ULDDefinitionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Create_Update_ULDDefinitionCompleted(Me, New Create_Update_ULDDefinitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Create_Update_OprLimit", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Create_Update_OprLimit(ByVal operational_limits_id As Integer, ByVal aircraft_config_cl_id As String, ByVal op_limit_type_cl_id As String, ByVal weight As Integer, ByVal MAC As Integer, ByVal Subfleet_Id As String, ByVal intVersionNo As Integer) As Integer
            Dim results() As Object = Me.Invoke("Create_Update_OprLimit", New Object() {operational_limits_id, aircraft_config_cl_id, op_limit_type_cl_id, weight, MAC, Subfleet_Id, intVersionNo})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Create_Update_OprLimitAsync(ByVal operational_limits_id As Integer, ByVal aircraft_config_cl_id As String, ByVal op_limit_type_cl_id As String, ByVal weight As Integer, ByVal MAC As Integer, ByVal Subfleet_Id As String, ByVal intVersionNo As Integer)
            Me.Create_Update_OprLimitAsync(operational_limits_id, aircraft_config_cl_id, op_limit_type_cl_id, weight, MAC, Subfleet_Id, intVersionNo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Create_Update_OprLimitAsync(ByVal operational_limits_id As Integer, ByVal aircraft_config_cl_id As String, ByVal op_limit_type_cl_id As String, ByVal weight As Integer, ByVal MAC As Integer, ByVal Subfleet_Id As String, ByVal intVersionNo As Integer, ByVal userState As Object)
            If (Me.Create_Update_OprLimitOperationCompleted Is Nothing) Then
                Me.Create_Update_OprLimitOperationCompleted = AddressOf Me.OnCreate_Update_OprLimitOperationCompleted
            End If
            Me.InvokeAsync("Create_Update_OprLimit", New Object() {operational_limits_id, aircraft_config_cl_id, op_limit_type_cl_id, weight, MAC, Subfleet_Id, intVersionNo}, Me.Create_Update_OprLimitOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreate_Update_OprLimitOperationCompleted(ByVal arg As Object)
            If (Not (Me.Create_Update_OprLimitCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Create_Update_OprLimitCompleted(Me, New Create_Update_OprLimitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_OperationalLimit", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Get_OperationalLimit(ByVal strTableId As Integer, ByVal straircraftconfig_cl_id As String, ByVal op_limit_cl_id As String, ByVal strsubfleet_id As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("Get_OperationalLimit", New Object() {strTableId, straircraftconfig_cl_id, op_limit_cl_id, strsubfleet_id})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Get_OperationalLimitAsync(ByVal strTableId As Integer, ByVal straircraftconfig_cl_id As String, ByVal op_limit_cl_id As String, ByVal strsubfleet_id As String)
            Me.Get_OperationalLimitAsync(strTableId, straircraftconfig_cl_id, op_limit_cl_id, strsubfleet_id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Get_OperationalLimitAsync(ByVal strTableId As Integer, ByVal straircraftconfig_cl_id As String, ByVal op_limit_cl_id As String, ByVal strsubfleet_id As String, ByVal userState As Object)
            If (Me.Get_OperationalLimitOperationCompleted Is Nothing) Then
                Me.Get_OperationalLimitOperationCompleted = AddressOf Me.OnGet_OperationalLimitOperationCompleted
            End If
            Me.InvokeAsync("Get_OperationalLimit", New Object() {strTableId, straircraftconfig_cl_id, op_limit_cl_id, strsubfleet_id}, Me.Get_OperationalLimitOperationCompleted, userState)
        End Sub
        
        Private Sub OnGet_OperationalLimitOperationCompleted(ByVal arg As Object)
            If (Not (Me.Get_OperationalLimitCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Get_OperationalLimitCompleted(Me, New Get_OperationalLimitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_ULDPosition", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Get_ULDPosition(ByVal strTableId As String, ByVal strAircraftId As String, ByVal PosID As Integer) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("Get_ULDPosition", New Object() {strTableId, strAircraftId, PosID})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Get_ULDPositionAsync(ByVal strTableId As String, ByVal strAircraftId As String, ByVal PosID As Integer)
            Me.Get_ULDPositionAsync(strTableId, strAircraftId, PosID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Get_ULDPositionAsync(ByVal strTableId As String, ByVal strAircraftId As String, ByVal PosID As Integer, ByVal userState As Object)
            If (Me.Get_ULDPositionOperationCompleted Is Nothing) Then
                Me.Get_ULDPositionOperationCompleted = AddressOf Me.OnGet_ULDPositionOperationCompleted
            End If
            Me.InvokeAsync("Get_ULDPosition", New Object() {strTableId, strAircraftId, PosID}, Me.Get_ULDPositionOperationCompleted, userState)
        End Sub
        
        Private Sub OnGet_ULDPositionOperationCompleted(ByVal arg As Object)
            If (Not (Me.Get_ULDPositionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Get_ULDPositionCompleted(Me, New Get_ULDPositionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateUpdateAirCraftPostion", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateUpdateAirCraftPostion(ByVal aircraft_config_pos_id As Integer, ByVal aircraft_conf_cl_id As String, ByVal Pos_name As String, ByVal uld_ref_cl_id As String, ByVal Max_Pos_Load As Integer, ByVal PosArm As Integer, ByVal strAircraftId As String, ByVal Version As Integer, ByVal LastUpdatedBy As String) As Integer
            Dim results() As Object = Me.Invoke("CreateUpdateAirCraftPostion", New Object() {aircraft_config_pos_id, aircraft_conf_cl_id, Pos_name, uld_ref_cl_id, Max_Pos_Load, PosArm, strAircraftId, Version, LastUpdatedBy})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateUpdateAirCraftPostionAsync(ByVal aircraft_config_pos_id As Integer, ByVal aircraft_conf_cl_id As String, ByVal Pos_name As String, ByVal uld_ref_cl_id As String, ByVal Max_Pos_Load As Integer, ByVal PosArm As Integer, ByVal strAircraftId As String, ByVal Version As Integer, ByVal LastUpdatedBy As String)
            Me.CreateUpdateAirCraftPostionAsync(aircraft_config_pos_id, aircraft_conf_cl_id, Pos_name, uld_ref_cl_id, Max_Pos_Load, PosArm, strAircraftId, Version, LastUpdatedBy, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateUpdateAirCraftPostionAsync(ByVal aircraft_config_pos_id As Integer, ByVal aircraft_conf_cl_id As String, ByVal Pos_name As String, ByVal uld_ref_cl_id As String, ByVal Max_Pos_Load As Integer, ByVal PosArm As Integer, ByVal strAircraftId As String, ByVal Version As Integer, ByVal LastUpdatedBy As String, ByVal userState As Object)
            If (Me.CreateUpdateAirCraftPostionOperationCompleted Is Nothing) Then
                Me.CreateUpdateAirCraftPostionOperationCompleted = AddressOf Me.OnCreateUpdateAirCraftPostionOperationCompleted
            End If
            Me.InvokeAsync("CreateUpdateAirCraftPostion", New Object() {aircraft_config_pos_id, aircraft_conf_cl_id, Pos_name, uld_ref_cl_id, Max_Pos_Load, PosArm, strAircraftId, Version, LastUpdatedBy}, Me.CreateUpdateAirCraftPostionOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateUpdateAirCraftPostionOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateUpdateAirCraftPostionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateUpdateAirCraftPostionCompleted(Me, New CreateUpdateAirCraftPostionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_UnderFloor_Comp", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Get_UnderFloor_Comp(ByVal strTableId As Integer, ByVal Aircraft_Id As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("Get_UnderFloor_Comp", New Object() {strTableId, Aircraft_Id})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Get_UnderFloor_CompAsync(ByVal strTableId As Integer, ByVal Aircraft_Id As String)
            Me.Get_UnderFloor_CompAsync(strTableId, Aircraft_Id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Get_UnderFloor_CompAsync(ByVal strTableId As Integer, ByVal Aircraft_Id As String, ByVal userState As Object)
            If (Me.Get_UnderFloor_CompOperationCompleted Is Nothing) Then
                Me.Get_UnderFloor_CompOperationCompleted = AddressOf Me.OnGet_UnderFloor_CompOperationCompleted
            End If
            Me.InvokeAsync("Get_UnderFloor_Comp", New Object() {strTableId, Aircraft_Id}, Me.Get_UnderFloor_CompOperationCompleted, userState)
        End Sub
        
        Private Sub OnGet_UnderFloor_CompOperationCompleted(ByVal arg As Object)
            If (Not (Me.Get_UnderFloor_CompCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Get_UnderFloor_CompCompleted(Me, New Get_UnderFloor_CompCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateUpdateUnderFloorComp", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateUpdateUnderFloorComp(ByVal underfloor_comp_id As Integer, ByVal Comp_cl_id As String, ByVal max_cpt_load As Integer, ByVal pos_ref1 As Integer, ByVal pos_ref2 As Integer, ByVal pos_ref3 As Integer, ByVal strAircraftId As String, ByVal Version As Integer, ByVal LastUpdatedBy As String) As Integer
            Dim results() As Object = Me.Invoke("CreateUpdateUnderFloorComp", New Object() {underfloor_comp_id, Comp_cl_id, max_cpt_load, pos_ref1, pos_ref2, pos_ref3, strAircraftId, Version, LastUpdatedBy})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateUpdateUnderFloorCompAsync(ByVal underfloor_comp_id As Integer, ByVal Comp_cl_id As String, ByVal max_cpt_load As Integer, ByVal pos_ref1 As Integer, ByVal pos_ref2 As Integer, ByVal pos_ref3 As Integer, ByVal strAircraftId As String, ByVal Version As Integer, ByVal LastUpdatedBy As String)
            Me.CreateUpdateUnderFloorCompAsync(underfloor_comp_id, Comp_cl_id, max_cpt_load, pos_ref1, pos_ref2, pos_ref3, strAircraftId, Version, LastUpdatedBy, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateUpdateUnderFloorCompAsync(ByVal underfloor_comp_id As Integer, ByVal Comp_cl_id As String, ByVal max_cpt_load As Integer, ByVal pos_ref1 As Integer, ByVal pos_ref2 As Integer, ByVal pos_ref3 As Integer, ByVal strAircraftId As String, ByVal Version As Integer, ByVal LastUpdatedBy As String, ByVal userState As Object)
            If (Me.CreateUpdateUnderFloorCompOperationCompleted Is Nothing) Then
                Me.CreateUpdateUnderFloorCompOperationCompleted = AddressOf Me.OnCreateUpdateUnderFloorCompOperationCompleted
            End If
            Me.InvokeAsync("CreateUpdateUnderFloorComp", New Object() {underfloor_comp_id, Comp_cl_id, max_cpt_load, pos_ref1, pos_ref2, pos_ref3, strAircraftId, Version, LastUpdatedBy}, Me.CreateUpdateUnderFloorCompOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateUpdateUnderFloorCompOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateUpdateUnderFloorCompCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateUpdateUnderFloorCompCompleted(Me, New CreateUpdateUnderFloorCompCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAircraftConfigDetails", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAircraftConfigDetails(ByVal straircraftId As String, ByVal Choice_list_Id As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetAircraftConfigDetails", New Object() {straircraftId, Choice_list_Id})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAircraftConfigDetailsAsync(ByVal straircraftId As String, ByVal Choice_list_Id As String)
            Me.GetAircraftConfigDetailsAsync(straircraftId, Choice_list_Id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAircraftConfigDetailsAsync(ByVal straircraftId As String, ByVal Choice_list_Id As String, ByVal userState As Object)
            If (Me.GetAircraftConfigDetailsOperationCompleted Is Nothing) Then
                Me.GetAircraftConfigDetailsOperationCompleted = AddressOf Me.OnGetAircraftConfigDetailsOperationCompleted
            End If
            Me.InvokeAsync("GetAircraftConfigDetails", New Object() {straircraftId, Choice_list_Id}, Me.GetAircraftConfigDetailsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAircraftConfigDetailsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAircraftConfigDetailsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAircraftConfigDetailsCompleted(Me, New GetAircraftConfigDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetULDConfigDefaultDetails", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetULDConfigDefaultDetails(ByVal straircraftId As String, ByVal air_conf_cl_id As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetULDConfigDefaultDetails", New Object() {straircraftId, air_conf_cl_id})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetULDConfigDefaultDetailsAsync(ByVal straircraftId As String, ByVal air_conf_cl_id As String)
            Me.GetULDConfigDefaultDetailsAsync(straircraftId, air_conf_cl_id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetULDConfigDefaultDetailsAsync(ByVal straircraftId As String, ByVal air_conf_cl_id As String, ByVal userState As Object)
            If (Me.GetULDConfigDefaultDetailsOperationCompleted Is Nothing) Then
                Me.GetULDConfigDefaultDetailsOperationCompleted = AddressOf Me.OnGetULDConfigDefaultDetailsOperationCompleted
            End If
            Me.InvokeAsync("GetULDConfigDefaultDetails", New Object() {straircraftId, air_conf_cl_id}, Me.GetULDConfigDefaultDetailsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetULDConfigDefaultDetailsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetULDConfigDefaultDetailsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetULDConfigDefaultDetailsCompleted(Me, New GetULDConfigDefaultDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_UnderFloor", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Get_UnderFloor(ByVal strTableId As Integer, ByVal Aircraft_Id As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("Get_UnderFloor", New Object() {strTableId, Aircraft_Id})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Get_UnderFloorAsync(ByVal strTableId As Integer, ByVal Aircraft_Id As String)
            Me.Get_UnderFloorAsync(strTableId, Aircraft_Id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Get_UnderFloorAsync(ByVal strTableId As Integer, ByVal Aircraft_Id As String, ByVal userState As Object)
            If (Me.Get_UnderFloorOperationCompleted Is Nothing) Then
                Me.Get_UnderFloorOperationCompleted = AddressOf Me.OnGet_UnderFloorOperationCompleted
            End If
            Me.InvokeAsync("Get_UnderFloor", New Object() {strTableId, Aircraft_Id}, Me.Get_UnderFloorOperationCompleted, userState)
        End Sub
        
        Private Sub OnGet_UnderFloorOperationCompleted(ByVal arg As Object)
            If (Not (Me.Get_UnderFloorCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Get_UnderFloorCompleted(Me, New Get_UnderFloorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")>  _
    Public Delegate Sub CreateUpdateUnderFloorCompletedEventHandler(ByVal sender As Object, ByVal e As CreateUpdateUnderFloorCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateUpdateUnderFloorCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")>  _
    Public Delegate Sub Create_Update_ServiceDefinitionCompletedEventHandler(ByVal sender As Object, ByVal e As Create_Update_ServiceDefinitionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Create_Update_ServiceDefinitionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")>  _
    Public Delegate Sub Get_ChoiceListByChoicelistIDCompletedEventHandler(ByVal sender As Object, ByVal e As Get_ChoiceListByChoicelistIDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Get_ChoiceListByChoicelistIDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")>  _
    Public Delegate Sub Get_ServiceDefinitionCompletedEventHandler(ByVal sender As Object, ByVal e As Get_ServiceDefinitionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Get_ServiceDefinitionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")>  _
    Public Delegate Sub Create_Update_ServiceDataCompletedEventHandler(ByVal sender As Object, ByVal e As Create_Update_ServiceDataCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Create_Update_ServiceDataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")>  _
    Public Delegate Sub Get_ServiceDataCompletedEventHandler(ByVal sender As Object, ByVal e As Get_ServiceDataCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Get_ServiceDataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")>  _
    Public Delegate Sub Get_GalleyWeightCompletedEventHandler(ByVal sender As Object, ByVal e As Get_GalleyWeightCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Get_GalleyWeightCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")>  _
    Public Delegate Sub Get_ULDConfigurationCompletedEventHandler(ByVal sender As Object, ByVal e As Get_ULDConfigurationCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Get_ULDConfigurationCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")>  _
    Public Delegate Sub Get_IPADUDIDCompletedEventHandler(ByVal sender As Object, ByVal e As Get_IPADUDIDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Get_IPADUDIDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")>  _
    Public Delegate Sub Get_IPADDBVersionHistoryCompletedEventHandler(ByVal sender As Object, ByVal e As Get_IPADDBVersionHistoryCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Get_IPADDBVersionHistoryCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")>  _
    Public Delegate Sub Get_IPADDetailsCompletedEventHandler(ByVal sender As Object, ByVal e As Get_IPADDetailsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Get_IPADDetailsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")>  _
    Public Delegate Sub Get_IPADVersionNoCompletedEventHandler(ByVal sender As Object, ByVal e As Get_IPADVersionNoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Get_IPADVersionNoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")>  _
    Public Delegate Sub Update_IPADDetailsCompletedEventHandler(ByVal sender As Object, ByVal e As Update_IPADDetailsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Update_IPADDetailsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")>  _
    Public Delegate Sub Push_Pre_Production_Data_To_ProductionCompletedEventHandler(ByVal sender As Object, ByVal e As Push_Pre_Production_Data_To_ProductionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Push_Pre_Production_Data_To_ProductionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")>  _
    Public Delegate Sub DatabaseSanityChecksCompletedEventHandler(ByVal sender As Object, ByVal e As DatabaseSanityChecksCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DatabaseSanityChecksCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")>  _
    Public Delegate Sub APNPushRequestCompletedEventHandler(ByVal sender As Object, ByVal e As APNPushRequestCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class APNPushRequestCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")>  _
    Public Delegate Sub APNTableSchemaCompletedEventHandler(ByVal sender As Object, ByVal e As APNTableSchemaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class APNTableSchemaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")>  _
    Public Delegate Sub CreateAPNRequestMasterCompletedEventHandler(ByVal sender As Object, ByVal e As CreateAPNRequestMasterCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateAPNRequestMasterCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")>  _
    Public Delegate Sub Publish_DatabaseCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")>  _
    Public Delegate Sub GetFunctionalitiesCompletedEventHandler(ByVal sender As Object, ByVal e As GetFunctionalitiesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetFunctionalitiesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")>  _
    Public Delegate Sub GetReportsForFunctionalityCompletedEventHandler(ByVal sender As Object, ByVal e As GetReportsForFunctionalityCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetReportsForFunctionalityCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")>  _
    Public Delegate Sub GetUserDetailsCompletedEventHandler(ByVal sender As Object, ByVal e As GetUserDetailsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUserDetailsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")>  _
    Public Delegate Sub ChangePwdCompletedEventHandler(ByVal sender As Object, ByVal e As ChangePwdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ChangePwdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")>  _
    Public Delegate Sub IsUserHasPermissionCompletedEventHandler(ByVal sender As Object, ByVal e As IsUserHasPermissionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class IsUserHasPermissionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")>  _
    Public Delegate Sub GetUsersCompletedEventHandler(ByVal sender As Object, ByVal e As GetUsersCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUsersCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")>  _
    Public Delegate Sub GetRolesCompletedEventHandler(ByVal sender As Object, ByVal e As GetRolesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetRolesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")>  _
    Public Delegate Sub GetStationsCompletedEventHandler(ByVal sender As Object, ByVal e As GetStationsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetStationsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")>  _
    Public Delegate Sub GetUserProfileCompletedEventHandler(ByVal sender As Object, ByVal e As GetUserProfileCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUserProfileCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")>  _
    Public Delegate Sub CreateUpdateUserProfileCompletedEventHandler(ByVal sender As Object, ByVal e As CreateUpdateUserProfileCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateUpdateUserProfileCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")>  _
    Public Delegate Sub GetPagesFunctionalitiesCompletedEventHandler(ByVal sender As Object, ByVal e As GetPagesFunctionalitiesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPagesFunctionalitiesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")>  _
    Public Delegate Sub GetRoleFunctionalitiesCompletedEventHandler(ByVal sender As Object, ByVal e As GetRoleFunctionalitiesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetRoleFunctionalitiesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")>  _
    Public Delegate Sub GetRoleFunctionalityLocationsCompletedEventHandler(ByVal sender As Object, ByVal e As GetRoleFunctionalityLocationsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetRoleFunctionalityLocationsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")>  _
    Public Delegate Sub IsRoleNameExistsCompletedEventHandler(ByVal sender As Object, ByVal e As IsRoleNameExistsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class IsRoleNameExistsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")>  _
    Public Delegate Sub CreateRoleCompletedEventHandler(ByVal sender As Object, ByVal e As CreateRoleCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateRoleCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")>  _
    Public Delegate Sub UpdateRoleCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateRoleCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateRoleCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")>  _
    Public Delegate Sub DeleteRoleCompletedEventHandler(ByVal sender As Object, ByVal e As DeleteRoleCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DeleteRoleCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")>  _
    Public Delegate Sub DeleteUserCompletedEventHandler(ByVal sender As Object, ByVal e As DeleteUserCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DeleteUserCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")>  _
    Public Delegate Sub GetDBDetailsCompletedEventHandler(ByVal sender As Object, ByVal e As GetDBDetailsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDBDetailsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")>  _
    Public Delegate Sub GetDBTableDataCompletedEventHandler(ByVal sender As Object, ByVal e As GetDBTableDataCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDBTableDataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")>  _
    Public Delegate Sub DeleteAircraftCompletedEventHandler(ByVal sender As Object, ByVal e As DeleteAircraftCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DeleteAircraftCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")>  _
    Public Delegate Sub CreateAircraftCompletedEventHandler(ByVal sender As Object, ByVal e As CreateAircraftCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateAircraftCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")>  _
    Public Delegate Sub Is_Database_Upgrade_RunningCompletedEventHandler(ByVal sender As Object, ByVal e As Is_Database_Upgrade_RunningCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Is_Database_Upgrade_RunningCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")>  _
    Public Delegate Sub Start_Database_Upgrade_SessionCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")>  _
    Public Delegate Sub Cancel_Database_Upgrade_SessionCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")>  _
    Public Delegate Sub Get_AircraftsCompletedEventHandler(ByVal sender As Object, ByVal e As Get_AircraftsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Get_AircraftsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")>  _
    Public Delegate Sub UpdateAircraftCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateAircraftCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateAircraftCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")>  _
    Public Delegate Sub UpdateAircraftConfigCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateAircraftConfigCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateAircraftConfigCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")>  _
    Public Delegate Sub Get_Aircraft_ConfigCompletedEventHandler(ByVal sender As Object, ByVal e As Get_Aircraft_ConfigCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Get_Aircraft_ConfigCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")>  _
    Public Delegate Sub Get_RegistrationCompletedEventHandler(ByVal sender As Object, ByVal e As Get_RegistrationCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Get_RegistrationCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")>  _
    Public Delegate Sub CreateRegistrationCompletedEventHandler(ByVal sender As Object, ByVal e As CreateRegistrationCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateRegistrationCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")>  _
    Public Delegate Sub UpdateRegistrationCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateRegistrationCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateRegistrationCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")>  _
    Public Delegate Sub DeleteRegistrationCompletedEventHandler(ByVal sender As Object, ByVal e As DeleteRegistrationCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DeleteRegistrationCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")>  _
    Public Delegate Sub CreateSubfleetCompletedEventHandler(ByVal sender As Object, ByVal e As CreateSubfleetCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateSubfleetCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")>  _
    Public Delegate Sub UpdateSubfleetCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateSubfleetCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateSubfleetCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")>  _
    Public Delegate Sub Get_SubfleetCompletedEventHandler(ByVal sender As Object, ByVal e As Get_SubfleetCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Get_SubfleetCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")>  _
    Public Delegate Sub DeleteSubfleetCompletedEventHandler(ByVal sender As Object, ByVal e As DeleteSubfleetCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DeleteSubfleetCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")>  _
    Public Delegate Sub Get_GalleyArmsCompletedEventHandler(ByVal sender As Object, ByVal e As Get_GalleyArmsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Get_GalleyArmsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")>  _
    Public Delegate Sub Create_Update_GalleyArmsCompletedEventHandler(ByVal sender As Object, ByVal e As Create_Update_GalleyArmsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Create_Update_GalleyArmsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")>  _
    Public Delegate Sub Get_ZoneDefinitionCompletedEventHandler(ByVal sender As Object, ByVal e As Get_ZoneDefinitionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Get_ZoneDefinitionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")>  _
    Public Delegate Sub Create_Update_ZoneDefinationCompletedEventHandler(ByVal sender As Object, ByVal e As Create_Update_ZoneDefinationCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Create_Update_ZoneDefinationCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")>  _
    Public Delegate Sub Get_Aircraft_Config_AdjustmentsCompletedEventHandler(ByVal sender As Object, ByVal e As Get_Aircraft_Config_AdjustmentsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Get_Aircraft_Config_AdjustmentsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")>  _
    Public Delegate Sub Create_Update_AirCraftConfigAdjCompletedEventHandler(ByVal sender As Object, ByVal e As Create_Update_AirCraftConfigAdjCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Create_Update_AirCraftConfigAdjCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")>  _
    Public Delegate Sub CreateChoice_ListCompletedEventHandler(ByVal sender As Object, ByVal e As CreateChoice_ListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateChoice_ListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")>  _
    Public Delegate Sub DeleteChoice_ListCompletedEventHandler(ByVal sender As Object, ByVal e As DeleteChoice_ListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DeleteChoice_ListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")>  _
    Public Delegate Sub UpdateChoice_ListCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateChoice_ListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateChoice_ListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")>  _
    Public Delegate Sub Get_ChoiceListCompletedEventHandler(ByVal sender As Object, ByVal e As Get_ChoiceListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Get_ChoiceListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")>  _
    Public Delegate Sub CreateChoicesCompletedEventHandler(ByVal sender As Object, ByVal e As CreateChoicesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateChoicesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")>  _
    Public Delegate Sub UpdateChoicesCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateChoicesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateChoicesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")>  _
    Public Delegate Sub Get_ChoicesCompletedEventHandler(ByVal sender As Object, ByVal e As Get_ChoicesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Get_ChoicesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")>  _
    Public Delegate Sub DeleteChoicesCompletedEventHandler(ByVal sender As Object, ByVal e As DeleteChoicesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DeleteChoicesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")>  _
    Public Delegate Sub Get_ULDDefinitonCompletedEventHandler(ByVal sender As Object, ByVal e As Get_ULDDefinitonCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Get_ULDDefinitonCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")>  _
    Public Delegate Sub Create_Update_ULDDefinitionCompletedEventHandler(ByVal sender As Object, ByVal e As Create_Update_ULDDefinitionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Create_Update_ULDDefinitionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")>  _
    Public Delegate Sub Create_Update_OprLimitCompletedEventHandler(ByVal sender As Object, ByVal e As Create_Update_OprLimitCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Create_Update_OprLimitCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")>  _
    Public Delegate Sub Get_OperationalLimitCompletedEventHandler(ByVal sender As Object, ByVal e As Get_OperationalLimitCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Get_OperationalLimitCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")>  _
    Public Delegate Sub Get_ULDPositionCompletedEventHandler(ByVal sender As Object, ByVal e As Get_ULDPositionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Get_ULDPositionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")>  _
    Public Delegate Sub CreateUpdateAirCraftPostionCompletedEventHandler(ByVal sender As Object, ByVal e As CreateUpdateAirCraftPostionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateUpdateAirCraftPostionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")>  _
    Public Delegate Sub Get_UnderFloor_CompCompletedEventHandler(ByVal sender As Object, ByVal e As Get_UnderFloor_CompCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Get_UnderFloor_CompCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")>  _
    Public Delegate Sub CreateUpdateUnderFloorCompCompletedEventHandler(ByVal sender As Object, ByVal e As CreateUpdateUnderFloorCompCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateUpdateUnderFloorCompCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")>  _
    Public Delegate Sub GetAircraftConfigDetailsCompletedEventHandler(ByVal sender As Object, ByVal e As GetAircraftConfigDetailsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAircraftConfigDetailsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")>  _
    Public Delegate Sub GetULDConfigDefaultDetailsCompletedEventHandler(ByVal sender As Object, ByVal e As GetULDConfigDefaultDetailsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetULDConfigDefaultDetailsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")>  _
    Public Delegate Sub Get_UnderFloorCompletedEventHandler(ByVal sender As Object, ByVal e As Get_UnderFloorCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Get_UnderFloorCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
End Namespace
